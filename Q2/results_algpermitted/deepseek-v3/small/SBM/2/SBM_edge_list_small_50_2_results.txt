To generate a graph layout that maintains consistency between Euclidean distance and graph-theoretic distance, we can use the `networkx` library to create the graph and then apply a layout algorithm such as the Kamada-Kawai layout, which is designed to minimize the difference between Euclidean distances and graph-theoretic distances.

Here is the Python script that generates the layout and outputs it in JSON format:

```python
import networkx as nx
import json

# Define the graph using the provided edge list
edge_list = [(0, 2), (0, 3), (0, 4), (0, 5), (1, 2), (1, 3), (1, 4), (1, 5), (1, 16), 
             (2, 3), (2, 5), (2, 8), (3, 5), (3, 10), (4, 5), (6, 9), (6, 10), (7, 8), 
             (7, 10), (8, 10), (9, 10), (11, 12), (11, 14), (12, 14), (12, 15), (12, 20), 
             (13, 14), (13, 15), (14, 20), (16, 17), (16, 18), (16, 19), (16, 20), 
             (17, 18), (18, 19), (18, 20), (19, 20)]

# Create a graph from the edge list
G = nx.Graph()
G.add_edges_from(edge_list)

# Generate the layout using the Kamada-Kawai algorithm
pos = nx.kamada_kawai_layout(G)

# Convert the layout to a dictionary with node IDs as keys and positions as values
layout = {node: [float(pos[node][0]), float(pos[node][1])] for node in pos}

# Output the layout in JSON format
print(json.dumps(layout, indent=4))
```

### Explanation:
1. **Graph Creation**: The graph is created using the provided edge list.
2. **Layout Generation**: The Kamada-Kawai layout algorithm is applied to the graph. This algorithm tries to position nodes such that the Euclidean distance between nodes is proportional to their graph-theoretic distance (i.e., the number of edges in the shortest path between them).
3. **JSON Output**: The positions of the nodes are converted to a dictionary and then serialized to JSON format.

### Output:
The output will be a JSON object where each key is a node ID, and the value is a list of two floats representing the x and y coordinates of the node's position in the layout.

You can run this script in a Python environment to get the JSON output.
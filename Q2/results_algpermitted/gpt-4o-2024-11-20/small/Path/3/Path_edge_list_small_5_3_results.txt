Here is a Python script that uses the `graphviz` library to compute a graph layout, while ensuring minimized edge crossings. The output is returned in JSON format.

```python
import json
import graphviz

def compute_graph_layout(edges):
    # Create a Graphviz graph
    graph = graphviz.Graph(format='json')  # Specifying the format as JSON
    
    # Add edges to the graph
    for edge in edges:
        graph.edge(str(edge[0]), str(edge[1]))
    
    # Render the graph in memory and get the layout data
    layout_data = graph.pipe(format='json')
    
    # Parse the JSON data and extract node positions
    layout_json = json.loads(layout_data)
    positions = {}
    for obj in layout_json["objects"]:
        if obj["type"] == "node":
            node_id = obj["name"]
            position = obj["pos"].split(',')  # Extract x, y positions
            positions[node_id] = {
                "x": float(position[0]),
                "y": float(position[1])
            }
    
    return positions

# Input edge list
edge_list = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5),
             (5, 6), (6, 7), (7, 8), (8, 9), (9, 10),
             (10, 11), (11, 12), (12, 13), (13, 14),
             (14, 15), (15, 16), (16, 17), (17, 18),
             (18, 19), (19, 20), (20, 21), (21, 22),
             (22, 23), (23, 24)]

# Compute layout
layout = compute_graph_layout(edge_list)

# Print layout in JSON format
print(json.dumps(layout, indent=4))
```

### Important Notes:
1. Install the `graphviz` Python package if you haven't already:
   ```bash
   pip install graphviz
   ```
   Additionally, ensure that the Graphviz system package is installed on your machine. You can install it using your OS-specific package manager (e.g., `apt`, `brew`, etc.).

2. This script uses the Graphviz utility to generate a layout that minimizes edge crossingsâ€”Graphviz provides several layout algorithms under the hood.

3. The output JSON dictionary contains nodes with their corresponding `x` and `y` coordinates. You can further utilize the layout data as required!

Let me know if you need additional modifications.
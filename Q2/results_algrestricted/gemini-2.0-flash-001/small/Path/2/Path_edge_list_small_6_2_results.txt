```python
import json
import math

def graph_layout(edge_list):
    """
    Generates a layout for a graph, maintaining consistency between
    Euclidean distance and graph-theoretic distance.

    Args:
        edge_list: A list of tuples representing the edges of the graph.

    Returns:
        A dictionary representing the graph layout, where keys are node IDs
        and values are (x, y) coordinates.  The layout is also returned as a JSON string.
    """

    # Determine the number of nodes in the graph.
    nodes = set()
    for edge in edge_list:
        nodes.add(edge[0])
        nodes.add(edge[1])
    num_nodes = len(nodes)

    # Initialize the layout with nodes placed in a line.
    layout = {}
    for i in range(num_nodes):
        layout[i] = (i, 0)  # Place nodes along the x-axis

    return json.dumps(layout)


# Example usage with the provided graph data:
edge_list = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 18), (18, 19), (19, 20), (20, 21), (21, 22), (22, 23), (23, 24), (24, 25)]
layout_json = graph_layout(edge_list)
print(layout_json)
```
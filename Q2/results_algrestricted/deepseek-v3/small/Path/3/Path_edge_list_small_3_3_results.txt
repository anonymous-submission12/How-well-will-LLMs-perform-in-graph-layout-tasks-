To generate a layout for the graph that minimizes edge crossings, we can use a simple approach where we arrange the nodes in a circular layout. This is a common method to reduce edge crossings, especially for cyclic graphs like the one provided.

Here is a Python script that generates a circular layout for the graph and outputs the positions in JSON format:

```python
import math
import json

def generate_circular_layout(edge_list):
    # Extract unique nodes from the edge list
    nodes = sorted(set([node for edge in edge_list for node in edge]))
    num_nodes = len(nodes)
    
    # Calculate the angle between each node
    angle_increment = (2 * math.pi) / num_nodes
    
    # Calculate the positions for each node
    positions = {}
    radius = 100  # Radius of the circle
    for i, node in enumerate(nodes):
        angle = i * angle_increment
        x = radius * math.cos(angle)
        y = radius * math.sin(angle)
        positions[node] = (x, y)
    
    return positions

# Example edge list
edge_list = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 18), (18, 19), (19, 20), (20, 21), (21, 22)]

# Generate the layout
layout = generate_circular_layout(edge_list)

# Output the layout in JSON format
print(json.dumps(layout, indent=4))
```

### Explanation:
1. **Extract Unique Nodes**: We first extract the unique nodes from the edge list.
2. **Calculate Angles**: We calculate the angle between each node by dividing the full circle (2Ï€ radians) by the number of nodes.
3. **Calculate Positions**: For each node, we calculate its position on the circumference of a circle using the cosine and sine functions.
4. **Output JSON**: Finally, we output the positions in JSON format.

This script will generate a circular layout for the graph, which should minimize edge crossings for the given edge list. The positions are calculated based on a circle with a radius of 100 units, but you can adjust the radius as needed.
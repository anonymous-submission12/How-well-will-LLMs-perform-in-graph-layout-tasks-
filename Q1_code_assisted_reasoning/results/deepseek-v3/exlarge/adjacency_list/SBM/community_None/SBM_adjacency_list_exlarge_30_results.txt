```python
from collections import defaultdict, deque

def bfs(start, visited, adjacency_list):
    queue = deque([start])
    visited[start] = True
    while queue:
        node = queue.popleft()
        for neighbor in adjacency_list[node]:
            if not visited[neighbor]:
                visited[neighbor] = True
                queue.append(neighbor)

def count_communities(adjacency_list):
    visited = defaultdict(bool)
    community_count = 0
    for node in adjacency_list:
        if not visited[node]:
            bfs(node, visited, adjacency_list)
            community_count += 1
    return community_count

adjacency_list = {
    0: [2, 4, 5, 6, 10, 11, 12, 13, 14, 18, 22, 24, 25, 38], 
    1: [3, 9, 12, 13, 16, 17, 18, 21, 23, 27, 78], 
    2: [0, 5, 6, 7, 9, 12, 14, 15, 16, 24, 26], 
    3: [1, 4, 5, 7, 8, 13, 16, 18, 24, 26], 
    4: [0, 3, 6, 8, 11, 19, 20, 22, 23, 25], 
    5: [0, 2, 3, 6, 7, 11, 12, 16, 19, 21, 22, 23, 25, 40, 62], 
    6: [0, 2, 4, 5, 10, 12, 18, 22, 24], 
    7: [2, 3, 5, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26], 
    8: [3, 4, 9, 12, 17, 21, 26], 
    9: [1, 2, 8, 10, 14, 16, 17, 21, 23, 24, 26, 33], 
    10: [0, 6, 9, 17, 19, 20, 23], 
    11: [0, 4, 5, 12, 14, 16, 17, 19, 21, 22, 24, 25, 26], 
    12: [0, 1, 2, 5, 6, 8, 11, 14, 16, 17, 18, 22, 23, 24, 25], 
    13: [0, 1, 3, 7, 14, 17, 20, 21, 24, 25, 37, 50], 
    14: [0, 2, 7, 9, 11, 12, 13, 16, 17, 18, 21, 25, 26], 
    15: [2, 20, 22, 25], 
    16: [1, 2, 3, 5, 9, 11, 12, 14, 19, 24, 25, 33, 48], 
    17: [1, 7, 8, 9, 10, 11, 12, 13, 14, 24, 26], 
    18: [0, 1, 3, 6, 7, 12, 14, 20, 22, 23, 26], 
    19: [4, 5, 7, 10, 11, 16, 20, 21, 22, 24, 25, 26], 
    20: [4, 7, 10, 13, 15, 18, 19, 21, 22, 24, 25, 26, 71, 75], 
    21: [1, 5, 7, 8, 9, 11, 13, 14, 19, 20, 25], 
    22: [0, 4, 5, 6, 11, 12, 15, 18, 19, 20], 
    23: [1, 4, 5, 7, 9, 10, 12, 18, 25, 26, 70], 
    24: [0, 2, 3, 6, 7, 9, 11, 12, 13, 16, 17, 19, 20, 25, 26], 
    25: [0, 4, 5, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24], 
    26: [2, 3, 7, 8, 9, 11, 14, 17, 18, 19, 20, 23, 24, 73], 
    27: [1, 28, 29, 30, 31, 35, 36, 39, 43, 45, 46, 49, 51, 52], 
    28: [27, 29, 30, 33, 36, 37, 39, 41, 45, 49, 51], 
    29: [27, 28, 30, 33, 35, 37, 41, 44, 47, 49, 50, 52, 73], 
    30: [27, 28, 29, 31, 32, 33, 34, 36, 37, 46, 47, 50], 
    31: [27, 30, 32, 33, 34, 36, 37, 40, 41, 44, 49, 51, 52], 
    32: [30, 31, 34, 35, 36, 37, 42, 43, 44, 48, 49, 50, 51, 52], 
    33: [9, 16, 28, 29, 30, 31, 40, 44, 46, 47, 48, 49, 50, 52], 
    34: [30, 31, 32, 36, 38, 39, 40, 43, 45, 46, 49, 50, 51, 52], 
    35: [27, 29, 32, 36, 40, 41, 42, 50, 51], 
    36: [27, 28, 30, 31, 32, 34, 35, 39, 47, 48, 49], 
    37: [13, 28, 29, 30, 31, 32, 39, 44, 45, 51, 72], 
    38: [0, 34, 39, 40, 41, 43, 45, 46, 48, 49], 
    39: [27, 28, 34, 36, 37, 38, 40, 41, 43, 52], 
    40: [5, 31, 33, 34, 35, 38, 39, 50, 51, 52], 
    41: [28, 29, 31, 35, 38, 39, 42, 49], 
    42: [32, 35, 41, 44, 52], 
    43: [27, 32, 34, 38, 39, 44, 49, 50], 
    44: [29, 31, 32, 33, 37, 42, 43, 48, 51], 
    45: [27, 28, 34, 37, 38, 47, 49, 52], 
    46: [27, 30, 33, 34, 38, 47, 51, 52], 
    47: [29, 30, 33, 36, 45, 46], 
    48: [16, 32, 33, 36, 38, 44, 50, 51], 
    49: [27, 28, 29, 31, 32, 33, 34, 36, 38, 41, 43, 45, 64], 
    50: [13, 29, 30, 32, 33, 34, 35, 40, 43, 48, 52], 
    51: [27, 28, 31, 32, 34, 35, 37, 40, 44, 46, 48, 56], 
    52: [27, 29, 31, 32, 33, 34, 39, 40, 42, 45, 46, 50, 75], 
    53: [56, 59, 62, 63, 64, 72, 75, 76], 
    54: [55, 64, 71, 75, 77, 78], 
    55: [54, 59, 62, 64, 65, 68, 71, 72, 73, 77], 
    56: [51, 53, 58, 66, 68, 69, 70, 74, 76, 78], 
    57: [59, 60, 69, 72, 74, 78], 
    58: [56, 60, 65, 69, 72, 77], 
    59: [53, 55, 57, 61, 65, 67, 68, 76], 
    60: [57, 58, 62, 63, 64, 72, 75], 
    61: [59, 62, 64, 65, 66, 69, 70, 73, 74, 75, 76], 
    62: [5, 53, 55, 60, 61, 64, 68, 71, 75, 76, 77], 
    63: [53, 60, 65, 66, 68, 72, 74, 75, 76], 
    64: [49, 53, 54, 55, 60, 61, 62, 66, 70, 71, 73, 74, 75, 76, 78], 
    65: [55, 58, 59, 61, 63, 69, 70, 71, 78], 
    66: [56, 61, 63, 64, 72, 73, 75, 77, 78], 
    67: [59, 68, 70, 71, 72, 73, 74, 76, 77], 
    68: [55, 56, 59, 62, 63, 67, 69, 75, 76], 
    69: [56, 57, 58, 61, 65, 68, 70, 75, 77], 
    70: [23, 56, 61, 64, 65, 67, 69, 75], 
    71: [20, 54, 55, 62, 64, 65, 67, 74, 75, 77], 
    72: [37, 53, 55, 57, 58, 60, 63, 66, 67, 76, 78], 
    73: [26, 29, 55, 61, 64, 66, 67, 74, 76, 78], 
    74: [56, 57, 61, 63, 64, 67, 71, 73, 75], 
    75: [20, 52, 53, 54, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 74, 77], 
    76: [53, 56, 59, 61, 62, 63, 64, 67, 68, 72, 73, 77], 
    77: [54, 55, 58, 62, 66, 67, 69, 71, 75, 76, 78], 
    78: [1, 54, 56, 57, 64, 65, 66, 72, 73, 77]
}

print(count_communities(adjacency_list))
```
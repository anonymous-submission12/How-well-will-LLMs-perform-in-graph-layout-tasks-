```python
from collections import defaultdict

def dfs(node, visited, adjacency_list):
    stack = [node]
    while stack:
        current_node = stack.pop()
        for neighbor in adjacency_list[current_node]:
            if neighbor not in visited:
                visited.add(neighbor)
                stack.append(neighbor)

def count_communities(adjacency_list):
    visited = set()
    communities = 0
    for node in adjacency_list:
        if node not in visited:
            communities += 1
            visited.add(node)
            dfs(node, visited, adjacency_list)
    return communities

adjacency_list = {
    0: [1, 4, 6, 9, 12, 14, 67], 1: [0, 4, 5, 6, 8, 11, 12], 2: [7, 9, 10, 11, 12], 
    3: [4, 5, 10, 14], 4: [0, 1, 3, 11, 14], 5: [1, 3, 7, 10, 12, 14], 
    6: [0, 1, 7, 8, 10, 12, 15, 29], 7: [2, 5, 6, 9, 11, 13], 
    8: [1, 6, 10, 14, 15, 40], 9: [0, 2, 7, 11, 14], 10: [2, 3, 5, 6, 8, 14, 23], 
    11: [1, 2, 4, 7, 9], 12: [0, 1, 2, 5, 6, 14], 13: [7, 15], 
    14: [0, 3, 4, 5, 8, 9, 10, 12, 15], 15: [6, 8, 13, 14, 38], 
    16: [18, 19, 24, 26, 28, 31], 17: [28], 18: [16, 20, 21, 24, 25, 29, 30], 
    19: [16, 23, 27, 28, 30], 20: [18, 21, 24, 26, 28], 21: [18, 20, 29, 31], 
    22: [24, 25, 28, 29, 30, 40, 60], 23: [10, 19, 25, 26, 29], 
    24: [16, 18, 20, 22, 26, 27, 28], 25: [18, 22, 23, 26, 27], 
    26: [16, 20, 23, 24, 25, 27, 28, 30, 31], 27: [19, 24, 25, 26, 30], 
    28: [16, 17, 19, 20, 22, 24, 26, 30, 31], 29: [6, 18, 21, 22, 23, 31], 
    30: [18, 19, 22, 26, 27, 28, 31], 31: [16, 21, 26, 28, 29, 30], 
    32: [35, 37, 38], 33: [34, 36, 41, 45, 46, 47], 34: [33, 35, 36, 38, 39, 40, 43, 45], 
    35: [32, 34, 39, 45], 36: [33, 34, 39, 42, 46], 37: [32, 38, 39, 40, 42, 43, 45], 
    38: [15, 32, 34, 37, 42, 45, 46], 39: [34, 35, 36, 37, 40, 46], 
    40: [8, 22, 34, 37, 39, 42, 43, 45], 41: [33, 42, 44, 45, 47, 66, 69], 
    42: [36, 37, 38, 40, 41, 43, 46], 43: [34, 37, 40, 42, 47, 63], 
    44: [41, 46, 47], 45: [33, 34, 35, 37, 38, 40, 41], 46: [33, 36, 38, 39, 42, 44], 
    47: [33, 41, 43, 44], 48: [56, 57, 58, 59], 49: [52, 56, 57, 60, 61, 62], 
    50: [55, 57, 58, 60, 61], 51: [52, 59, 60, 62], 52: [49, 51, 53, 56, 60], 
    53: [52, 55, 59, 60, 62], 54: [55, 57, 59, 60, 61], 55: [50, 53, 54, 56, 57], 
    56: [48, 49, 52, 55, 60, 61, 62], 57: [48, 49, 50, 54, 55, 61], 
    58: [48, 50, 61], 59: [48, 51, 53, 54, 60, 62], 
    60: [22, 49, 50, 51, 52, 53, 54, 56, 59], 61: [49, 50, 54, 56, 57, 58, 62], 
    62: [49, 51, 53, 56, 59, 61], 64: [66, 69, 71, 72, 74, 76], 
    65: [66, 67, 68, 69, 70, 71, 77], 66: [41, 64, 65, 68, 69, 72], 
    67: [0, 63, 65, 75, 77], 68: [65, 66, 70, 72, 73, 74, 77], 
    69: [41, 63, 64, 65, 66, 70, 71, 73, 74, 75], 70: [63, 65, 68, 69, 72, 75, 76, 77], 
    71: [64, 65, 69, 74, 76, 77], 72: [64, 66, 68, 70, 76, 77], 
    73: [63, 68, 69, 74, 75, 77], 74: [64, 68, 69, 71, 73, 75, 77], 
    75: [67, 69, 70, 73, 74, 76, 77], 76: [64, 70, 71, 72, 75, 77], 
    77: [63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76], 63: [43, 67, 69, 70, 73, 77]
}

print(count_communities(adjacency_list))
```
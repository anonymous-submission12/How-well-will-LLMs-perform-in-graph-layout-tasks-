```python
from collections import defaultdict, deque

def bfs(start, visited, adj_list):
    queue = deque([start])
    visited[start] = True
    while queue:
        node = queue.popleft()
        for neighbor in adj_list[node]:
            if not visited[neighbor]:
                visited[neighbor] = True
                queue.append(neighbor)

def count_communities(adj_list):
    visited = defaultdict(bool)
    community_count = 0
    for node in adj_list:
        if not visited[node]:
            bfs(node, visited, adj_list)
            community_count += 1
    return community_count

adj_list = {
    0: [1, 3, 8, 12, 13, 17, 18, 19, 20, 21, 23], 
    1: [0, 4, 7, 8, 11, 13, 16, 17, 21, 22, 24, 25, 28, 34, 74], 
    2: [6, 7, 9, 15, 17, 18, 20], 
    3: [0, 6, 9, 12, 15, 16, 18, 21, 24, 25], 
    4: [1, 9, 12, 14, 16, 23, 24], 
    5: [7, 12, 14, 15, 18, 19, 23, 24, 25], 
    6: [2, 3, 7, 9, 11, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25], 
    7: [1, 2, 5, 6, 8, 9, 13, 15, 18, 19, 21, 23, 24, 34, 58], 
    8: [0, 1, 7, 14, 15, 16, 24, 25], 
    9: [2, 3, 4, 6, 7, 10, 13, 14, 15, 19, 22, 24], 
    10: [9, 11, 12, 14, 18, 21, 22, 23], 
    11: [1, 6, 10, 12, 14, 15, 21, 23], 
    12: [0, 3, 4, 5, 10, 11, 14, 19, 21, 24], 
    13: [0, 1, 6, 7, 9, 14, 18, 21, 24, 51], 
    14: [4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 30], 
    15: [2, 3, 5, 7, 8, 9, 11, 14, 20], 
    16: [1, 3, 4, 6, 8, 20, 21, 22, 23, 24], 
    17: [0, 1, 2, 18, 20, 21, 22, 24, 51], 
    18: [0, 2, 3, 5, 7, 10, 13, 14, 17, 19, 21, 22, 23], 
    19: [0, 5, 6, 7, 9, 12, 14, 18, 24, 53], 
    20: [0, 2, 6, 14, 15, 16, 17, 25, 60], 
    21: [0, 1, 3, 6, 7, 10, 11, 12, 13, 16, 17, 18, 22, 29], 
    22: [1, 6, 9, 10, 14, 16, 17, 18, 21, 25], 
    23: [0, 4, 5, 6, 7, 10, 11, 14, 16, 18, 24, 25], 
    24: [1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 19, 23, 54], 
    25: [1, 3, 5, 6, 8, 20, 22, 23], 
    26: [27, 30, 31, 32, 37, 42, 43, 44, 47, 48, 50, 68], 
    27: [26, 33, 41, 46], 
    28: [1, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 50], 
    29: [21, 30, 32, 34, 35, 36, 37, 40, 41, 47], 
    30: [14, 26, 29, 32, 33, 34, 35, 37, 38, 43, 45, 46, 48, 49], 
    31: [26, 33, 35, 42, 43], 
    32: [26, 28, 29, 30, 34, 37, 40, 44, 45, 46, 47, 48, 50, 69], 
    33: [27, 28, 30, 31, 36, 38, 39, 48], 
    34: [1, 7, 28, 29, 30, 32, 38, 42, 43, 50], 
    35: [28, 29, 30, 31, 39, 43, 44, 46, 50], 
    36: [28, 29, 33, 37, 39, 40, 43, 45, 50], 
    37: [26, 28, 29, 30, 32, 36, 41, 44, 50], 
    38: [28, 30, 33, 34, 39, 40, 41, 43, 45, 46, 48, 49, 54], 
    39: [28, 33, 35, 36, 38, 40, 45, 46, 47, 49], 
    40: [29, 32, 36, 38, 39, 44, 45, 46, 48, 50], 
    41: [27, 28, 29, 37, 38, 43, 44, 46, 48, 50], 
    42: [26, 28, 31, 34, 43, 46, 47, 65], 
    43: [26, 30, 31, 34, 35, 36, 38, 41, 42, 44, 49, 50], 
    44: [26, 28, 32, 35, 37, 40, 41, 43, 46, 49], 
    45: [30, 32, 36, 38, 39, 40, 46, 48], 
    46: [27, 28, 30, 32, 35, 38, 39, 40, 41, 42, 44, 45, 47, 49, 50], 
    47: [26, 28, 29, 32, 39, 42, 46, 49], 
    48: [26, 28, 30, 32, 33, 38, 40, 41, 45, 49, 50], 
    49: [30, 38, 39, 43, 44, 46, 47, 48, 50], 
    50: [26, 28, 32, 34, 35, 36, 37, 40, 41, 43, 46, 48, 49], 
    51: [13, 17, 52, 53, 56, 57, 61, 63, 66, 71, 72], 
    52: [51, 58, 59, 64, 66, 67, 68, 69, 70, 71], 
    53: [19, 51, 54, 55, 56, 58, 63, 69, 70, 71, 72], 
    54: [24, 38, 53, 56, 58, 61, 63, 64, 65, 70, 71, 72, 73], 
    55: [53, 59, 60, 64, 65, 67, 68, 69, 71, 75], 
    56: [51, 53, 54, 57, 66, 73], 
    57: [51, 56, 58, 61, 67, 69, 71, 72, 73, 75], 
    58: [7, 52, 53, 54, 57, 62, 63, 72, 73, 74, 75], 
    59: [52, 55, 62, 63, 65, 66, 67, 70, 72, 75], 
    60: [20, 55, 62, 65, 66, 67, 68], 
    61: [51, 54, 57, 67, 68, 69, 72, 75], 
    62: [58, 59, 60, 66, 68, 69, 70, 71, 74, 75], 
    63: [51, 53, 54, 58, 59, 65, 66, 71, 75], 
    64: [52, 54, 55, 65, 67, 69, 71], 
    65: [42, 54, 55, 59, 60, 63, 64, 68, 69, 71, 75], 
    66: [51, 52, 56, 59, 60, 62, 63, 70, 71, 72, 73, 75], 
    67: [52, 55, 57, 59, 60, 61, 64, 68, 69, 70, 71, 73, 74], 
    68: [26, 52, 55, 60, 61, 62, 65, 67, 69, 70, 71, 73, 75], 
    69: [32, 52, 53, 55, 57, 61, 62, 64, 65, 67, 68, 71, 74, 75], 
    70: [52, 53, 54, 59, 62, 66, 67, 68, 73], 
    71: [51, 52, 53, 54, 55, 57, 62, 63, 64, 65, 66, 67, 68, 69, 75], 
    72: [51, 53, 54, 57, 58, 59, 61, 66, 74], 
    73: [54, 56, 57, 58, 66, 67, 68, 70, 75], 
    74: [1, 58, 62, 67, 69, 72, 75], 
    75: [55, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 71, 73, 74]
}

print(count_communities(adj_list))
```
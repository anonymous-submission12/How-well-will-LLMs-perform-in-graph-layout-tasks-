```python
from collections import deque

def shortest_path_length(adj_list, start, end):
    visited = {start: 0}
    queue = deque([start])
    
    while queue:
        current = queue.popleft()
        if current == end:
            print(visited[current])
            return
        for neighbor in adj_list[current]:
            if neighbor not in visited:
                visited[neighbor] = visited[current] + 1
                queue.append(neighbor)
    
    print(-1)

adj_list = {0: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], 1: [0], 2: [0], 3: [0], 4: [0], 5: [0], 6: [0], 7: [0], 8: [0], 9: [0], 10: [0], 11: [0], 12: [0], 13: [0], 14: [0], 15: [0], 16: [0], 17: [0], 18: [0], 19: [0], 20: [0], 21: [0], 22: [0], 23: [0], 24: [0], 25: [0], 26: [0]}
shortest_path_length(adj_list, 6, 8)
```
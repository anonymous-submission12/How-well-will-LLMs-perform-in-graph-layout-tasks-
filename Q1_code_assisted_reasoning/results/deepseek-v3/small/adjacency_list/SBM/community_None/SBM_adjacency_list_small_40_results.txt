```python
from collections import defaultdict, deque

def bfs(start, visited, adj_list):
    queue = deque([start])
    visited[start] = True
    while queue:
        node = queue.popleft()
        for neighbor in adj_list[node]:
            if not visited[neighbor]:
                visited[neighbor] = True
                queue.append(neighbor)

def count_communities(adj_list):
    visited = {node: False for node in adj_list}
    community_count = 0
    for node in adj_list:
        if not visited[node]:
            bfs(node, visited, adj_list)
            community_count += 1
    return community_count

adj_list = {
    0: [1, 2, 4, 5], 1: [0, 2, 3, 4, 5, 11], 2: [0, 1, 3, 4, 5], 3: [1, 2, 4, 10, 17], 
    4: [0, 1, 2, 3, 5], 5: [0, 1, 2, 4], 6: [7, 8, 10, 11], 7: [6, 11], 8: [6, 9, 10], 
    9: [8, 10, 11], 10: [3, 6, 8, 9, 14], 11: [1, 6, 7, 9, 15], 12: [13, 15, 16], 
    13: [12, 14, 15, 16], 14: [10, 13, 15, 16], 15: [11, 12, 13, 14, 16], 
    16: [12, 13, 14, 15], 17: [3, 18, 19, 20, 21], 18: [17, 19, 20], 19: [17, 18], 
    20: [17, 18, 21], 21: [17, 20]
}

print(count_communities(adj_list))
```
```python
from collections import defaultdict, deque

def count_communities(adj_list):
    visited = set()
    communities = 0
    
    for node in adj_list:
        if node not in visited:
            communities += 1
            queue = deque([node])
            while queue:
                current_node = queue.popleft()
                if current_node not in visited:
                    visited.add(current_node)
                    for neighbor in adj_list[current_node]:
                        if neighbor not in visited:
                            queue.append(neighbor)
    
    print(communities)

# Adjacency list
adj_list = {
    0: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 
    1: [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 
    2: [0, 1, 3, 4, 5, 6, 8, 9, 10], 
    3: [0, 1, 2, 5, 6, 9, 10], 
    4: [0, 1, 2, 5, 6, 7, 9], 
    5: [0, 1, 2, 3, 4, 6, 7, 9, 11], 
    6: [0, 1, 2, 3, 4, 5, 7, 9, 11], 
    7: [0, 1, 4, 5, 6, 9, 11], 
    8: [0, 1, 2, 9, 11], 
    9: [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11], 
    10: [0, 1, 2, 3, 9, 11, 12], 
    11: [0, 1, 5, 6, 7, 8, 9, 10], 
    12: [0, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22], 
    13: [12, 14, 15, 16, 17, 18, 20, 21], 
    14: [12, 13, 15, 17, 18, 19, 20, 22], 
    15: [12, 13, 14, 17, 18, 19, 20, 21, 22], 
    16: [12, 13, 18, 20, 21, 22], 
    17: [12, 13, 14, 15, 18, 19, 22], 
    18: [12, 13, 14, 15, 16, 17, 19, 20, 21, 22], 
    19: [12, 14, 15, 17, 18, 22], 
    20: [12, 13, 14, 15, 16, 18, 22], 
    21: [13, 15, 16, 18, 22], 
    22: [12, 14, 15, 16, 17, 18, 19, 20, 21]
}

count_communities(adj_list)
```
```python
import networkx as nx

# Create the graph from the edge list
edges = [(0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 8), (0, 15), (1, 2), (1, 5), (1, 6), (2, 3), (2, 4), (2, 5), (2, 6), (3, 5), (3, 6), (4, 5), (4, 6), (5, 6), (7, 8), (7, 9), (7, 10), (7, 11), (7, 12), (7, 13), (8, 9), (8, 11), (8, 12), (9, 10), (9, 11), (9, 12), (9, 13), (10, 13), (11, 12), (12, 13), (12, 15), (14, 15), (14, 16), (14, 17), (14, 18), (15, 16), (15, 18), (15, 19), (15, 20), (16, 17), (16, 20), (17, 18), (17, 19), (17, 20), (18, 19), (19, 20)]
G = nx.Graph()
G.add_edges_from(edges)

# Find communities using the greedy modularity maximization
communities = nx.algorithms.community.greedy_modularity_communities(G)

# Print the number of communities
print(len(communities))
```
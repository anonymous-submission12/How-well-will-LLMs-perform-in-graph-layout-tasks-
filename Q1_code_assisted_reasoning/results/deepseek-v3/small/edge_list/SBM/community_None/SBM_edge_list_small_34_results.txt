```python
from collections import defaultdict

def find_communities(edge_list):
    graph = defaultdict(list)
    for u, v in edge_list:
        graph[u].append(v)
        graph[v].append(u)
    
    visited = set()
    communities = 0
    
    def dfs(node):
        stack = [node]
        while stack:
            current = stack.pop()
            for neighbor in graph[current]:
                if neighbor not in visited:
                    visited.add(neighbor)
                    stack.append(neighbor)
    
    for node in graph:
        if node not in visited:
            visited.add(node)
            dfs(node)
            communities += 1
    
    return communities

edge_list = [(0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (1, 4), (1, 5), (2, 3), (3, 4), (3, 5), (5, 17), (6, 8), (6, 10), (6, 15), (7, 8), (7, 9), (7, 10), (8, 9), (8, 10), (9, 10), (11, 12), (11, 13), (11, 15), (12, 13), (12, 14), (13, 14), (14, 15), (14, 20), (16, 17), (16, 18), (16, 19), (16, 20), (17, 18), (17, 19), (17, 20), (18, 19), (18, 20), (19, 20)]
print(find_communities(edge_list))
```
```python
graph = [(0, 1), (0, 11), (1, 2), (1, 12), (2, 3), (2, 13), (3, 4), (3, 14), (4, 5), (4, 15), (5, 6), (5, 16), (6, 7), (6, 17), (7, 8), (7, 18), (8, 9), (8, 19), (9, 10), (9, 20), (10, 21), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 18), (18, 19), (19, 20), (20, 21)]

def find_shortest_path(graph, start, end):
    graph_dict = {}
    for edge in graph:
        u, v = edge
        if u not in graph_dict:
            graph_dict[u] = []
        if v not in graph_dict:
            graph_dict[v] = []
        graph_dict[u].append(v)
        graph_dict[v].append(u)

    queue = [(start, [start])]
    visited = set()

    while queue:
        (node, path) = queue.pop(0)

        if node == end:
            return len(path) - 1

        if node not in visited:
            visited.add(node)
            if node in graph_dict:
                for neighbor in graph_dict[node]:
                    queue.append((neighbor, path + [neighbor]))

    return float('inf')

shortest_path_length = find_shortest_path(graph, 21, 12)
print(shortest_path_length)
```
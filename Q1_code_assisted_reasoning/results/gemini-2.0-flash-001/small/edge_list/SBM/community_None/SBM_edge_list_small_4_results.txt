```python
def count_communities(edge_list):
    """
    Counts the number of communities in a graph represented as an edge list.

    Args:
        edge_list: A list of tuples, where each tuple represents an edge in the graph.

    Returns:
        The number of communities in the graph.
    """

    nodes = set()
    for u, v in edge_list:
        nodes.add(u)
        nodes.add(v)

    parent = {node: node for node in nodes}

    def find(node):
        if parent[node] == node:
            return node
        parent[node] = find(parent[node])
        return parent[node]

    def union(node1, node2):
        root1 = find(node1)
        root2 = find(node2)
        if root1 != root2:
            parent[root1] = root2

    for u, v in edge_list:
        union(u, v)

    communities = set()
    for node in nodes:
        communities.add(find(node))

    return len(communities)


edge_list = [(0, 1), (0, 4), (0, 5), (0, 8), (1, 2), (1, 5), (1, 6), (1, 24), (2, 3), (2, 5), (2, 6), (3, 4), (3, 9), (4, 6), (5, 6), (7, 8), (7, 9), (7, 11), (7, 12), (7, 13), (8, 9), (8, 10), (8, 13), (8, 14), (9, 10), (9, 11), (9, 12), (10, 11), (10, 12), (11, 12), (11, 13), (11, 20), (14, 15), (14, 16), (14, 17), (14, 19), (14, 20), (15, 18), (15, 19), (15, 20), (16, 17), (16, 19), (16, 20), (17, 18), (17, 19), (18, 20), (21, 22), (21, 23), (21, 24), (21, 26), (21, 27), (22, 25), (22, 26), (22, 27), (23, 24), (23, 25), (23, 26), (23, 27), (24, 25), (24, 26), (24, 27), (25, 27), (26, 27)]
num_communities = count_communities(edge_list)
print(num_communities)
```
```python
graph = [(0, 1), (0, 2), (0, 4), (0, 5), (0, 21), (1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (2, 15), (3, 4), (3, 24), (4, 5), (6, 7), (6, 8), (6, 9), (6, 10), (7, 8), (7, 9), (7, 10), (8, 9), (8, 10), (9, 10), (9, 21), (10, 11), (12, 14), (12, 15), (12, 16), (13, 15), (13, 16), (14, 26), (15, 16), (15, 18), (17, 18), (17, 19), (17, 21), (18, 20), (18, 21), (19, 20), (19, 21), (20, 21), (22, 24), (22, 25), (22, 26), (23, 24), (23, 25), (23, 26), (24, 25), (24, 26), (25, 26)]

def solve():
    adj = {}
    for u, v in graph:
        if u not in adj:
            adj[u] = []
        if v not in adj:
            adj[v] = []
        adj[u].append(v)
        adj[v].append(u)

    q = [(15, 0)]
    visited = {15}

    while q:
        node, dist = q.pop(0)
        if node == 4:
            print(dist)
            return

        if node not in adj:
            continue

        for neighbor in adj[node]:
            if neighbor not in visited:
                visited.add(neighbor)
                q.append((neighbor, dist + 1))
solve()
```
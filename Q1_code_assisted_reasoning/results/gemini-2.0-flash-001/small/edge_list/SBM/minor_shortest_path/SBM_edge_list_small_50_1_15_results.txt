```python
import collections

def solve():
    edges = [(0, 2), (0, 3), (0, 4), (0, 5), (1, 2), (1, 3), (1, 4), (1, 5), (1, 16), (2, 3), (2, 5), (2, 8), (3, 5), (3, 10), (4, 5), (6, 9), (6, 10), (7, 8), (7, 10), (8, 10), (9, 10), (11, 12), (11, 14), (12, 14), (12, 15), (12, 20), (13, 14), (13, 15), (14, 20), (16, 17), (16, 18), (16, 19), (16, 20), (17, 18), (18, 19), (18, 20), (19, 20)]
    
    graph = collections.defaultdict(list)
    for u, v in edges:
        graph[u].append(v)
        graph[v].append(u)
    
    start_node = 1
    end_node = 15
    
    queue = collections.deque([(start_node, 0)])
    visited = {start_node}
    
    while queue:
        node, distance = queue.popleft()
        
        if node == end_node:
            print(distance)
            return
        
        for neighbor in graph[node]:
            if neighbor not in visited:
                visited.add(neighbor)
                queue.append((neighbor, distance + 1))
    
    print(-1)  # No path found

solve()
```
```python
graph = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 18), (18, 19), (19, 20), (20, 21), (21, 22), (22, 23)]

def find_shortest_path(graph, start, end):
    
    adj = {}
    for u, v in graph:
        if u not in adj:
            adj[u] = []
        if v not in adj:
            adj[v] = []
        adj[u].append(v)
        
    
    queue = [(start, [start])]
    
    while queue:
        (vertex, path) = queue.pop(0)
        
        if vertex == end:
            return len(path) - 1
        
        for neighbor in adj.get(vertex, []):
            if neighbor not in path:
                queue.append((neighbor, path + [neighbor]))
    
    return float('inf')
    

shortest_path_length = find_shortest_path(graph, 13, 23)
print(shortest_path_length)
```
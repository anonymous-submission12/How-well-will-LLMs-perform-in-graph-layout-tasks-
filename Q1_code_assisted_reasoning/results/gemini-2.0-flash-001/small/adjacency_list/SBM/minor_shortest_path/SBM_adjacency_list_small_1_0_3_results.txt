```python
graph = {0: [1, 3, 4, 5], 1: [0, 3, 4, 5], 2: [4, 5], 3: [0, 1, 4, 5], 4: [0, 1, 2, 3, 5, 14], 5: [0, 1, 2, 3, 4], 6: [7, 8, 9, 10], 7: [6, 8, 9, 10], 8: [6, 7, 9, 10, 11], 9: [6, 7, 8, 10], 10: [6, 7, 8, 9], 11: [8, 12, 13, 14, 15], 12: [11, 13, 14, 15], 13: [11, 12, 15], 14: [4, 11, 12, 15], 15: [11, 12, 13, 14, 17], 16: [18, 19, 20], 17: [15, 18, 19, 20], 18: [16, 17, 19, 20], 19: [16, 17, 18, 20], 20: [16, 17, 18, 19]}

def shortest_path_length(graph, start, target):
    queue = [(start, 0)]
    visited = {start}
    while queue:
        node, distance = queue.pop(0)
        if node == target:
            return distance
        for neighbor in graph[node]:
            if neighbor not in visited:
                visited.add(neighbor)
                queue.append((neighbor, distance + 1))
    return -1

print(shortest_path_length(graph, 0, 3))
```
```python
from collections import defaultdict

def find_communities(graph):
    visited = set()
    communities = 0

    def dfs(node):
        stack = [node]
        while stack:
            current = stack.pop()
            if current not in visited:
                visited.add(current)
                stack.extend(graph[current])

    for node in graph:
        if node not in visited:
            communities += 1
            dfs(node)

    return communities

graph = {0: [2, 5, 9, 11, 12, 15, 19, 23], 1: [4, 5, 11, 14, 15, 16, 17, 18, 19, 23], 2: [0, 3, 4, 5, 7, 8, 11, 12, 13, 16, 17, 21, 24], 3: [2, 5, 6, 9, 11, 14, 17, 19, 20, 21, 23, 49, 62], 4: [1, 2, 5, 7, 14, 15, 16, 19, 21, 24, 49], 5: [0, 1, 2, 3, 4, 7, 9, 10, 11, 14, 16], 6: [3, 7, 9, 12, 13, 14, 15, 19, 22], 7: [2, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16, 18, 19, 22], 8: [2, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 24], 9: [0, 3, 5, 6, 7, 8, 10, 12, 15, 17, 20, 23], 10: [5, 7, 8, 9, 17, 19, 20, 21, 24, 40], 11: [0, 1, 2, 3, 5, 7, 8, 13, 14, 15, 18, 19, 21, 22, 24], 12: [0, 2, 6, 7, 8, 9, 13, 17, 19, 23, 26, 57], 13: [2, 6, 11, 12, 14, 16, 19, 20, 22, 23], 14: [1, 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 17, 20, 22, 23, 55], 15: [0, 1, 4, 6, 7, 8, 9, 11, 14, 19, 20, 21, 22], 16: [1, 2, 4, 5, 7, 8, 13, 14, 19, 21, 22], 17: [1, 2, 3, 8, 9, 10, 12, 14, 18, 20, 21], 18: [1, 7, 8, 11, 17, 21, 22, 23], 19: [0, 1, 3, 4, 6, 7, 10, 11, 12, 13, 15, 16, 20, 21, 22, 23, 24], 20: [3, 8, 9, 10, 13, 14, 15, 17, 19, 21], 21: [2, 3, 4, 8, 10, 11, 15, 16, 17, 18, 19, 20, 23, 24], 22: [6, 7, 11, 13, 14, 15, 16, 18, 19, 23], 23: [0, 1, 3, 9, 12, 13, 14, 18, 19, 21, 22, 51], 24: [2, 4, 8, 10, 11, 19, 21], 25: [27, 30, 33, 42, 43, 46], 26: [12, 32, 33, 34, 37, 42, 43, 44, 49], 27: [25, 30, 33, 34, 38, 42, 47, 49], 28: [31, 33, 34, 36, 39, 40, 42, 45, 48], 29: [33, 36, 42, 43, 44, 45, 48, 51], 30: [25, 27, 34, 36, 37, 39, 40, 41, 42, 47], 31: [28, 32, 33, 37, 42, 43, 45, 46, 48, 49], 32: [26, 31, 36, 38, 39, 41, 42, 43], 33: [25, 26, 27, 28, 29, 31, 38, 39, 40, 41, 43, 48], 34: [26, 27, 28, 30, 37, 38, 39, 40, 45, 47, 49], 35: [40, 43, 45, 47], 36: [28, 29, 30, 32, 37, 39, 43, 46, 47, 48], 37: [26, 30, 31, 34, 36, 38, 42, 43, 44, 46, 47], 38: [27, 32, 33, 34, 37, 40, 43, 44, 45, 47, 48], 39: [28, 30, 32, 33, 34, 36, 40, 41, 44, 46], 40: [10, 28, 30, 33, 34, 35, 38, 39, 42, 43, 45, 48, 67], 41: [30, 32, 33, 39, 44, 46], 42: [25, 26, 27, 28, 29, 30, 31, 32, 37, 40, 43, 45, 47], 43: [25, 26, 29, 31, 32, 33, 35, 36, 37, 38, 40, 42, 46, 47, 49], 44: [26, 29, 37, 38, 39, 41, 46, 47, 48], 45: [28, 29, 31, 34, 35, 38, 40, 42, 46, 47, 48], 46: [25, 31, 36, 37, 39, 41, 43, 44, 45, 49], 47: [27, 30, 34, 35, 36, 37, 38, 42, 43, 44, 45], 48: [28, 29, 31, 33, 36, 38, 40, 44, 45, 49], 49: [3, 4, 26, 27, 31, 34, 43, 46, 48], 50: [55, 56, 59, 61, 63, 67, 70, 72], 51: [23, 29, 55, 58, 63, 65, 67, 68, 71], 52: [54, 60, 63, 64, 67, 70, 72, 73], 53: [54, 61, 65, 66, 67, 68, 70, 71, 72, 73], 54: [52, 53, 56, 57, 60, 61, 63, 67, 71, 72, 73], 55: [14, 50, 51, 56, 58, 59, 60, 62, 63, 64, 66, 68, 70, 71], 56: [50, 54, 55, 59, 60, 62, 64, 65, 69], 57: [12, 54, 58, 61, 67, 72], 58: [51, 55, 57, 63, 66, 67, 68, 73], 59: [50, 55, 56, 63, 68, 69, 72], 60: [52, 54, 55, 56, 63, 69, 70], 61: [50, 53, 54, 57, 62, 66, 71], 62: [3, 55, 56, 61, 64, 66, 67, 69, 71, 72], 63: [50, 51, 52, 54, 55, 58, 59, 60, 64, 65, 67, 69, 72], 64: [52, 55, 56, 62, 63, 65, 68, 71], 65: [51, 53, 56, 63, 64, 71, 72], 66: [53, 55, 58, 61, 62, 67, 70, 73], 67: [40, 50, 51, 52, 53, 54, 57, 58, 62, 63, 66, 69, 70], 68: [51, 53, 55, 58, 59, 64], 69: [56, 59, 60, 62, 63, 67], 70: [50, 52, 53, 55, 60, 66, 67, 71], 71: [51, 53, 54, 55, 61, 62, 64, 65, 70], 72: [50, 52, 53, 54, 57, 59, 62, 63, 65], 73: [52, 53, 54, 58, 66]}
print(find_communities(graph))
```
```python
from collections import deque

def shortest_path_length(graph, start, end):
    queue = deque([(start, 0)])
    visited = set()
    
    while queue:
        current, distance = queue.popleft()
        if current == end:
            return distance
        if current not in visited:
            visited.add(current)
            for neighbor in graph[current]:
                if neighbor not in visited:
                    queue.append((neighbor, distance + 1))
    return -1  # If no path exists

graph = {0: [1, 2, 3, 4, 6, 7], 1: [0, 7, 9], 2: [0, 7], 3: [0, 4, 7], 4: [0, 3, 5, 9, 11], 5: [4, 6, 10], 6: [0, 5], 7: [0, 1, 2, 3], 8: [9, 11, 35], 9: [1, 4, 8, 11], 10: [5, 22], 11: [4, 8, 9], 12: [13, 16, 21, 22], 13: [12, 14, 18, 20, 22, 38, 62], 14: [13, 17, 18, 20, 21, 23], 15: [16, 21, 22], 16: [12, 15, 20, 23], 17: [14, 18], 18: [13, 14, 17, 19, 20, 42], 19: [18, 23, 55], 20: [13, 14, 16, 18, 21, 23, 37], 21: [12, 14, 15, 20, 22, 23], 22: [10, 12, 13, 15, 21], 23: [14, 16, 19, 20, 21], 32: [24, 26, 30, 31], 33: [24, 26], 34: [24, 26, 27, 28, 29, 31, 42, 57], 24: [26, 31, 32, 33, 34], 25: [26, 31], 26: [24, 25, 27, 29, 31, 32, 33, 34], 27: [26, 28, 29, 34], 28: [27, 34], 29: [26, 27, 30, 31, 34], 30: [29, 32], 31: [24, 25, 26, 29, 32, 34], 35: [8, 36, 39, 42, 44, 61], 36: [35, 37, 38, 39, 40, 43, 45], 37: [20, 36, 38, 41, 45, 53], 38: [13, 36, 37, 42, 43], 39: [35, 36, 43], 40: [36, 44, 45], 41: [37, 42], 42: [18, 34, 35, 38, 41, 43, 44, 61], 43: [36, 38, 39, 42, 44], 44: [35, 40, 42, 43], 45: [36, 37, 40], 46: [52, 54, 55], 47: [51, 52, 54], 48: [50, 53, 55, 56], 49: [50, 53, 54], 50: [48, 49, 53, 54, 56], 51: [47, 52, 55, 56], 52: [46, 47, 51, 55], 53: [37, 48, 49, 50, 54], 54: [46, 47, 49, 50, 53, 55], 55: [19, 46, 48, 51, 52, 54], 56: [48, 50, 51], 64: [57, 58, 59, 60, 61, 63, 67], 65: [59, 63, 67], 66: [57, 67], 67: [57, 58, 61, 62, 64, 65, 66], 57: [34, 63, 64, 66, 67], 58: [64, 67], 59: [61, 62, 64, 65], 60: [61, 64], 61: [35, 42, 59, 60, 64, 67], 62: [13, 59, 63, 67, 71], 63: [57, 62, 64, 65], 68: [71, 75, 76, 78], 69: [72, 75], 70: [71, 75, 76, 78], 71: [62, 68, 70, 73, 77], 72: [69, 75, 76, 77, 78], 73: [71, 74, 75, 76, 77], 74: [73, 75, 76, 78], 75: [68, 69, 70, 72, 73, 74, 77], 76: [68, 70, 72, 73, 74, 77], 77: [71, 72, 73, 75, 76], 78: [68, 70, 72, 74]}
print(shortest_path_length(graph, 37, 71))
```
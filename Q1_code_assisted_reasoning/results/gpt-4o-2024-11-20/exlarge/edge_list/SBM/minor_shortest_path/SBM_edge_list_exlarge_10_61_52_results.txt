```python
import networkx as nx

# Define the graph using the edge list
edge_list = [(0, 1), (0, 2), (0, 4), (0, 5), (0, 6), (0, 10), (1, 7), (1, 8), (1, 13), (2, 3), (2, 5), (2, 7), (2, 10), (2, 12), (2, 47), (3, 4), (3, 11), (4, 7), (4, 8), (4, 9), (4, 11), (5, 6), (5, 11), (6, 11), (6, 13), (7, 9), (7, 10), (7, 13), (8, 9), (8, 10), (8, 12), (8, 13), (9, 10), (9, 11), (9, 12), (10, 13), (11, 12), (11, 17), (12, 13), (14, 18), (14, 20), (14, 21), (14, 23), (14, 24), (14, 25), (14, 26), (15, 19), (15, 21), (15, 23), (15, 24), (16, 21), (16, 22), (16, 26), (16, 57), (17, 19), (17, 22), (17, 24), (17, 25), (17, 26), (17, 27), (17, 73), (18, 21), (18, 24), (18, 26), (19, 21), (19, 23), (19, 25), (21, 24), (21, 25), (21, 27), (22, 24), (22, 25), (23, 24), (23, 25), (23, 36), (24, 26), (25, 27), (27, 43), (28, 30), (29, 30), (29, 31), (32, 31), (32, 35), (32, 38), (33, 28), (33, 36), (33, 38), (33, 39), (33, 40), (34, 28), (34, 29), (34, 30), (34, 36), (34, 38), (34, 39), (34, 40), (35, 30), (35, 39), (36, 29), (36, 30), (36, 31), (37, 28), (37, 31), (37, 39), (38, 30), (38, 31), (38, 39), (39, 29), (40, 28), (40, 29), (40, 30), (41, 44), (41, 50), (41, 51), (42, 43), (42, 46), (42, 48), (42, 53), (42, 67), (43, 44), (43, 45), (43, 47), (43, 48), (43, 49), (43, 50), (43, 52), (44, 48), (44, 50), (44, 52), (45, 47), (45, 49), (45, 65), (46, 47), (46, 49), (46, 53), (47, 51), (47, 52), (47, 53), (48, 50), (48, 51), (48, 53), (48, 79), (49, 51), (49, 52), (49, 53), (50, 51), (50, 53), (50, 63), (51, 52), (54, 57), (54, 63), (55, 57), (55, 62), (56, 57), (56, 60), (56, 62), (57, 60), (57, 61), (57, 62), (58, 59), (58, 60), (59, 60), (59, 63), (60, 61), (60, 62), (60, 63), (64, 54), (64, 56), (64, 58), (64, 59), (64, 63), (64, 65), (64, 66), (65, 56), (66, 56), (66, 58), (66, 60), (66, 61), (66, 63), (67, 68), (67, 72), (67, 73), (67, 74), (67, 77), (67, 78), (68, 69), (68, 71), (68, 73), (68, 75), (69, 70), (69, 71), (69, 72), (69, 74), (69, 78), (70, 71), (70, 75), (70, 76), (70, 77), (71, 78), (72, 73), (72, 77), (72, 78), (73, 75), (73, 76), (73, 78), (73, 79), (74, 77), (74, 78), (75, 76), (77, 79)]

# Create a graph object
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between nodes 61 and 52
shortest_path_length = nx.shortest_path_length(G, source=61, target=52)

# Print the result
print(shortest_path_length)
```
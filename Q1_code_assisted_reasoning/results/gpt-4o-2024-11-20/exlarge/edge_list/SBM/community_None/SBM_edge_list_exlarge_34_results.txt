```python
import networkx as nx

# Define the edge list
edge_list = [(0, 1), (0, 8), (0, 9), (0, 11), (0, 13), (0, 14), (1, 5), (1, 7), (1, 8), (1, 9), (1, 13), (1, 15), (2, 3), (2, 4), (2, 6), (2, 8), (2, 15), (3, 5), (3, 8), (3, 9), (3, 10), (4, 7), (4, 9), (4, 10), (4, 13), (4, 14), (4, 15), (5, 7), (5, 8), (5, 9), (6, 7), (6, 8), (6, 9), (6, 11), (6, 43), (7, 11), (7, 13), (7, 14), (7, 15), (8, 9), (8, 13), (9, 12), (9, 15), (10, 11), (10, 13), (11, 15), (12, 13), (13, 14), (13, 15), (13, 56), (14, 15), (16, 17), (16, 19), (16, 21), (16, 23), (16, 27), (16, 30), (17, 18), (17, 20), (17, 22), (17, 25), (17, 28), (18, 22), (18, 26), (18, 27), (18, 29), (18, 30), (19, 21), (19, 25), (19, 26), (19, 27), (19, 28), (20, 21), (20, 23), (20, 27), (20, 29), (21, 22), (21, 24), (21, 27), (21, 28), (21, 29), (21, 30), (22, 24), (22, 29), (22, 57), (23, 24), (23, 25), (23, 26), (24, 25), (24, 28), (24, 30), (25, 27), (25, 30), (27, 28), (27, 40), (27, 51), (29, 30), (29, 34), (29, 46), (32, 31), (32, 37), (32, 40), (32, 43), (33, 37), (33, 39), (33, 43), (34, 35), (34, 39), (34, 42), (34, 45), (35, 31), (35, 38), (35, 45), (36, 40), (36, 42), (36, 43), (37, 31), (37, 43), (37, 67), (38, 43), (39, 31), (39, 44), (40, 31), (40, 43), (41, 31), (41, 43), (41, 44), (41, 45), (41, 59), (42, 44), (42, 45), (43, 44), (46, 48), (46, 49), (46, 50), (46, 53), (46, 56), (46, 57), (46, 58), (47, 49), (47, 59), (48, 49), (48, 52), (48, 60), (49, 50), (49, 52), (49, 55), (49, 58), (50, 52), (50, 54), (50, 58), (50, 59), (51, 52), (51, 53), (51, 54), (51, 55), (51, 58), (51, 59), (51, 60), (52, 54), (52, 55), (52, 60), (53, 54), (53, 55), (53, 59), (53, 60), (54, 55), (55, 57), (55, 58), (57, 60), (61, 63), (62, 63), (64, 66), (64, 69), (64, 70), (64, 71), (64, 74), (65, 63), (65, 68), (65, 72), (65, 74), (66, 62), (66, 68), (66, 69), (66, 75), (67, 63), (67, 74), (68, 61), (68, 62), (68, 71), (68, 74), (69, 61), (69, 70), (69, 72), (69, 75), (70, 61), (70, 71), (70, 72), (70, 73), (70, 75), (71, 62), (71, 72), (71, 73), (71, 74), (71, 75), (72, 73), (72, 75), (74, 62), (75, 61), (75, 62)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Find connected components
communities = list(nx.connected_components(G))

# Output the number of communities
print(len(communities))
```
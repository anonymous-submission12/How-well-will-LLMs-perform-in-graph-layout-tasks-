```python
from collections import defaultdict

def dfs(node, visited, graph):
    stack = [node]
    while stack:
        current = stack.pop()
        if current not in visited:
            visited.add(current)
            stack.extend(graph[current])

def count_communities(graph):
    visited = set()
    communities = 0
    for node in graph:
        if node not in visited:
            dfs(node, visited, graph)
            communities += 1
    return communities

graph = {0: [1, 2, 3, 4, 7, 39], 1: [0, 2, 4, 6], 2: [0, 1, 3, 4, 5, 6], 3: [0, 2, 6, 7, 25], 4: [0, 1, 2, 5, 6], 5: [2, 4, 6, 7], 6: [1, 2, 3, 4, 5], 7: [0, 3, 5], 8: [10, 13, 14, 15, 21], 9: [11, 12, 13, 14], 10: [8, 11, 13, 14, 15, 35], 11: [9, 10, 14, 15], 12: [9, 15], 13: [8, 9, 10, 14], 14: [8, 9, 10, 11, 13, 15, 24], 15: [8, 10, 11, 12, 14], 16: [17, 20, 22], 17: [16, 18, 19, 22], 18: [17, 19, 21, 22], 19: [17, 18, 21, 23, 26], 20: [16, 21], 21: [8, 18, 19, 20, 23], 22: [16, 17, 18, 23], 23: [19, 21, 22], 24: [14, 26, 27, 28, 29, 30, 43], 25: [3, 26, 27, 30, 31], 26: [19, 24, 25, 27, 28, 29, 30, 31], 27: [24, 25, 26, 28, 31, 34], 28: [24, 26, 27, 29, 31], 29: [24, 26, 28, 30, 31], 30: [24, 25, 26, 29], 31: [25, 26, 27, 28, 29], 32: [36, 38], 33: [34, 36, 37], 34: [27, 33, 35, 36, 37, 38], 35: [10, 34, 36, 38], 36: [32, 33, 34, 35], 37: [33, 34], 38: [32, 34, 35], 39: [0, 40, 42, 43, 44], 40: [39, 42, 45], 41: [42, 43, 45], 42: [39, 40, 41, 43, 44], 43: [24, 39, 41, 42, 44], 44: [39, 42, 43], 45: [40, 41]}
print(count_communities(graph))
```
```python:/home/user/count_communities.py
from collections import deque

def count_communities(graph):
    visited = set()
    communities = 0

    def bfs(start):
        queue = deque([start])
        visited.add(start)
        while queue:
            node = queue.popleft()
            for neighbor in graph.get(node, []):
                if neighbor not in visited:
                    visited.add(neighbor)
                    queue.append(neighbor)

    for node in graph:
        if node not in visited:
            bfs(node)
            communities += 1

    print(communities)

graph = {0: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 1: [0, 5, 6, 7, 8, 9, 10], 2: [0, 3, 4, 5, 6, 9, 10, 11], 3: [0, 2, 8, 11, 27], 4: [0, 2, 5, 8, 11], 5: [0, 1, 2, 4, 7, 9, 10, 11], 6: [0, 1, 2, 7, 8, 10, 11, 36], 7: [0, 1, 5, 6, 8, 10, 11, 16, 18, 29], 8: [0, 1, 3, 4, 6, 7, 10, 11], 9: [0, 1, 2, 5, 10], 10: [0, 1, 2, 5, 6, 7, 8, 9], 11: [0, 2, 3, 4, 5, 6, 7, 8], 12: [13, 14, 16, 19, 20, 21, 22], 13: [12, 14, 17, 22, 23, 29, 31], 14: [12, 13, 15, 16, 17, 18, 19, 21, 22], 15: [14, 16, 22, 23], 16: [7, 12, 14, 15, 17, 18, 21, 22, 23, 29], 17: [13, 14, 16, 18, 19, 20, 21, 22, 23], 18: [7, 14, 16, 17, 19, 21, 22], 19: [12, 14, 17, 18, 20, 23], 20: [12, 17, 19, 21, 22], 21: [12, 14, 16, 17, 18, 20, 22, 23], 22: [12, 13, 14, 15, 16, 17, 18, 20, 21, 23], 23: [13, 15, 16, 17, 19, 21, 22], 32: [24, 25, 26, 27, 28, 29, 30, 35], 33: [25, 26, 30, 31, 35], 34: [25, 26, 27, 28, 30], 35: [24, 26, 27, 28, 31, 32, 33, 47], 24: [28, 29, 30, 32, 35], 25: [27, 28, 29, 30, 31, 32, 33, 34], 26: [29, 31, 32, 33, 34, 35], 27: [3, 25, 29, 31, 32, 34, 35], 28: [24, 25, 29, 31, 32, 34, 35], 29: [7, 13, 16, 24, 25, 26, 27, 28, 30, 31, 32], 30: [24, 25, 29, 31, 32, 33, 34], 31: [13, 25, 26, 27, 28, 29, 30, 33, 35], 36: [6, 37, 38, 39, 40, 41, 42, 43, 44, 46], 37: [36, 38, 40, 41, 43, 44, 46], 38: [36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], 39: [36, 38, 43, 44, 46, 47], 40: [36, 37, 38, 42, 44, 46], 41: [36, 37, 38, 42, 43, 45, 47], 42: [36, 38, 40, 41, 44, 45, 46, 47], 43: [36, 37, 38, 39, 41, 44, 47], 44: [36, 37, 38, 39, 40, 42, 43], 45: [38, 41, 42, 46, 47], 46: [36, 37, 38, 39, 40, 42, 45, 47], 47: [35, 38, 39, 41, 42, 43, 45, 46]}

count_communities(graph)
```
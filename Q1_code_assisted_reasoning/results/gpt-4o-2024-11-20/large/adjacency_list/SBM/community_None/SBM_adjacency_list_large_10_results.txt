```python
from collections import defaultdict

def find_communities(graph):
    visited = set()
    communities = []

    def dfs(node, community):
        visited.add(node)
        community.append(node)
        for neighbor in graph[node]:
            if neighbor not in visited:
                dfs(neighbor, community)

    for node in graph:
        if node not in visited:
            community = []
            dfs(node, community)
            communities.append(community)

    return len(communities)

graph = {0: [2, 3, 4, 5, 6, 8], 1: [2, 3, 6, 8], 2: [0, 1, 7, 8, 25], 3: [0, 1, 6, 7, 8, 17], 4: [0, 5, 8], 5: [0, 4, 6, 7, 8], 6: [0, 1, 3, 5, 8], 7: [2, 3, 5], 8: [0, 1, 2, 3, 4, 5, 6, 20], 9: [10, 11, 12, 15, 16, 17], 10: [9, 13, 15, 16], 11: [9, 15, 16, 17], 12: [9, 13, 15], 13: [10, 12, 15, 17], 14: [16], 15: [9, 10, 11, 12, 13], 16: [9, 10, 11, 14], 17: [3, 9, 11, 13, 30], 18: [20, 23, 24, 25], 19: [20, 23, 24, 25], 20: [8, 18, 19, 21, 23, 24, 32, 34], 21: [20, 23, 24, 30], 22: [23, 24, 25, 29], 23: [18, 19, 20, 21, 22, 24], 24: [18, 19, 20, 21, 22, 23, 36], 25: [2, 18, 19, 22], 32: [20, 26, 27, 30, 31, 33], 33: [26, 28, 29, 30, 31, 32], 26: [28, 29, 30, 31, 32, 33, 39], 27: [28, 31, 32], 28: [26, 27, 29, 30, 31, 33], 29: [22, 26, 28, 30, 33], 30: [17, 21, 26, 28, 29, 32, 33], 31: [26, 27, 28, 32, 33], 34: [20, 36, 37, 39, 40, 41], 35: [36, 37, 40, 41], 36: [24, 34, 35], 37: [34, 35, 38, 39, 40, 41], 38: [37, 39, 40], 39: [26, 34, 37, 38], 40: [34, 35, 37, 38, 41], 41: [34, 35, 37, 40]}
print(find_communities(graph))
```
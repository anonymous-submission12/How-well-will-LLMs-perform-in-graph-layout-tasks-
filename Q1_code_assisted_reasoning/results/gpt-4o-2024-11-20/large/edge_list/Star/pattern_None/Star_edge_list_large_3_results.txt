```python
def determine_graph_pattern(edge_list):
    # Extract all nodes from the edge list
    nodes = set()
    for edge in edge_list:
        nodes.update(edge)
    
    # Count the degree of each node
    degree_count = {node: 0 for node in nodes}
    for edge in edge_list:
        degree_count[edge[0]] += 1
        degree_count[edge[1]] += 1
    
    # Check for Star pattern
    center_node = max(degree_count, key=degree_count.get)
    if degree_count[center_node] == len(nodes) - 1 and all(degree_count[node] == 1 for node in nodes if node != center_node):
        return "Star"
    
    # Check for other patterns (Cycle, Path, Grid, Complete, etc.)
    # For simplicity, we only check for Star in this implementation
    return "Unknown"

edge_list = [(0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19), (0, 20), (0, 21), (0, 22), (0, 23), (0, 24), (0, 25), (0, 26), (0, 27), (0, 28), (0, 29), (0, 30), (0, 31), (0, 32), (0, 33), (0, 34), (0, 35), (0, 36), (0, 37), (0, 38), (0, 39), (0, 40), (0, 41), (0, 42)]
print(determine_graph_pattern(edge_list))
```
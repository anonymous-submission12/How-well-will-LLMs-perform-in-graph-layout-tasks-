```python
import networkx as nx

# Define the graph using the edge list
edge_list = [(0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 13), (0, 14), (0, 15), (0, 16), (1, 3), (1, 4), (1, 5), (1, 7), (1, 8), (1, 10), (1, 13), (1, 14), (1, 15), (1, 16), (2, 3), (2, 4), (2, 5), (2, 7), (2, 8), (2, 11), (2, 15), (2, 16), (2, 30), (3, 4), (3, 6), (3, 7), (3, 9), (3, 10), (3, 13), (3, 14), (3, 15), (4, 5), (4, 7), (4, 8), (4, 11), (4, 12), (4, 13), (5, 7), (5, 9), (5, 10), (5, 12), (5, 14), (5, 15), (6, 7), (6, 8), (6, 12), (6, 14), (6, 15), (6, 16), (7, 8), (7, 9), (7, 11), (7, 12), (7, 13), (7, 14), (8, 10), (8, 13), (8, 15), (9, 13), (9, 14), (9, 15), (9, 16), (10, 11), (10, 12), (10, 13), (10, 15), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16), (11, 28), (12, 13), (12, 14), (12, 15), (13, 15), (13, 16), (14, 15), (14, 16), (17, 18), (17, 19), (17, 25), (17, 26), (17, 27), (17, 28), (17, 49), (18, 20), (18, 21), (18, 22), (18, 25), (18, 26), (18, 27), (18, 28), (18, 29), (18, 30), (18, 31), (19, 21), (19, 22), (19, 23), (19, 24), (19, 25), (19, 26), (19, 28), (19, 29), (19, 30), (19, 31), (20, 21), (20, 22), (20, 24), (20, 26), (20, 27), (20, 28), (20, 29), (21, 22), (21, 23), (21, 24), (21, 26), (21, 27), (21, 29), (21, 30), (21, 31), (21, 38), (22, 23), (22, 26), (22, 28), (22, 29), (22, 30), (22, 43), (23, 25), (23, 26), (23, 27), (23, 29), (23, 30), (23, 31), (24, 25), (24, 26), (24, 27), (24, 28), (24, 30), (24, 31), (25, 27), (25, 29), (25, 30), (25, 31), (26, 28), (26, 30), (26, 31), (27, 29), (27, 31), (28, 29), (28, 30), (29, 30), (29, 31), (32, 17), (32, 18), (32, 19), (32, 21), (32, 22), (32, 24), (32, 26), (32, 27), (32, 28), (32, 29), (32, 30), (32, 31), (32, 33), (33, 18), (33, 19), (33, 20), (33, 22), (33, 27), (33, 28), (33, 29), (33, 30), (33, 31), (34, 35), (34, 36), (34, 37), (34, 39), (34, 40), (34, 41), (34, 42), (34, 45), (34, 46), (34, 48), (35, 37), (35, 38), (35, 41), (35, 42), (35, 43), (35, 45), (35, 46), (35, 47), (35, 48), (35, 49), (36, 39), (36, 41), (36, 42), (36, 44), (36, 48), (37, 39), (37, 41), (37, 42), (37, 49), (38, 39), (38, 40), (38, 41), (38, 44), (38, 45), (38, 46), (38, 47), (38, 48), (39, 40), (39, 41), (39, 42), (39, 43), (39, 44), (39, 45), (40, 43), (40, 44), (40, 46), (40, 47), (40, 48), (40, 49), (41, 42), (41, 44), (41, 45), (41, 48), (42, 46), (42, 47), (42, 48), (42, 49), (43, 47), (43, 49), (44, 45), (44, 46), (44, 47), (44, 49), (45, 46), (45, 47), (45, 48), (46, 48), (47, 49), (48, 49)]

G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between nodes 29 and 5
shortest_path_length = nx.shortest_path_length(G, source=29, target=5)
print(shortest_path_length)
```
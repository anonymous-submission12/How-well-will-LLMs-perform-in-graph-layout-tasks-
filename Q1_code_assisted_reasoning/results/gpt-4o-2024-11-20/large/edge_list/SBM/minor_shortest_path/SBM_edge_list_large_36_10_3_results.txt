```python
import networkx as nx

# Define the graph using edge list
edge_list = [(0, 2), (0, 4), (0, 6), (0, 36), (1, 3), (1, 5), (1, 33), (2, 3), (2, 4), (2, 5), (3, 5), (3, 6), (4, 5), (4, 6), (5, 6), (6, 32), (7, 8), (7, 11), (7, 13), (7, 27), (8, 10), (8, 11), (8, 12), (8, 13), (8, 32), (9, 10), (9, 11), (9, 12), (10, 13), (11, 12), (11, 13), (11, 36), (12, 26), (14, 15), (14, 16), (14, 18), (15, 16), (15, 17), (15, 18), (15, 19), (15, 20), (15, 26), (16, 18), (17, 18), (17, 19), (17, 20), (18, 19), (19, 20), (21, 24), (21, 25), (21, 26), (21, 27), (22, 24), (22, 26), (23, 24), (23, 27), (24, 25), (24, 26), (25, 26), (25, 27), (26, 27), (28, 29), (28, 30), (29, 31), (29, 38), (30, 31), (32, 28), (32, 31), (33, 28), (33, 29), (34, 28), (34, 30), (34, 31), (35, 36), (35, 39), (35, 40), (36, 38), (36, 39), (36, 40), (37, 38), (39, 40)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '10' and '3'
result = nx.shortest_path_length(G, source=10, target=3)
print(result)
```
```python
import networkx as nx

# Define the edge list
edge_list = [(0, 1), (0, 2), (0, 3), (0, 4), (0, 7), (0, 39), (1, 2), (1, 4), (1, 6), (2, 3), (2, 4), (2, 5), (2, 6), (3, 6), (3, 7), (3, 25), (4, 5), (4, 6), (5, 6), (5, 7), (8, 10), (8, 13), (8, 14), (8, 15), (8, 21), (9, 11), (9, 12), (9, 13), (9, 14), (10, 11), (10, 13), (10, 14), (10, 15), (10, 35), (11, 14), (11, 15), (12, 15), (13, 14), (14, 15), (14, 24), (16, 17), (16, 20), (16, 22), (17, 18), (17, 19), (17, 22), (18, 19), (18, 21), (18, 22), (19, 21), (19, 23), (19, 26), (20, 21), (21, 23), (22, 23), (24, 26), (24, 27), (24, 28), (24, 29), (24, 30), (24, 43), (25, 26), (25, 27), (25, 30), (25, 31), (26, 27), (26, 28), (26, 29), (26, 30), (26, 31), (27, 28), (27, 31), (27, 34), (28, 29), (28, 31), (29, 30), (29, 31), (32, 36), (32, 38), (33, 34), (33, 36), (33, 37), (34, 35), (34, 36), (34, 37), (34, 38), (35, 36), (35, 38), (39, 40), (39, 42), (39, 43), (39, 44), (40, 42), (40, 45), (41, 42), (41, 43), (41, 45), (42, 43), (42, 44), (43, 44)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length
shortest_path_length = nx.shortest_path_length(G, source=40, target=39)

# Print the result
print(shortest_path_length)
```
```python
import networkx as nx

# Define the graph using the edge list
edge_list = [(0, 1), (0, 2), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (1, 2), (1, 3), (1, 5), (1, 7), (1, 9), (1, 46), (2, 3), (2, 5), (2, 6), (2, 7), (2, 8), (3, 5), (3, 7), (3, 8), (3, 23), (4, 8), (4, 9), (4, 13), (5, 6), (5, 7), (5, 8), (5, 9), (6, 7), (6, 9), (7, 8), (7, 9), (10, 11), (10, 12), (10, 13), (10, 18), (10, 19), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16), (11, 19), (12, 13), (12, 15), (12, 18), (12, 19), (13, 14), (13, 15), (13, 16), (13, 18), (13, 19), (14, 16), (14, 17), (14, 18), (14, 19), (15, 16), (15, 17), (15, 18), (15, 37), (16, 19), (18, 19), (20, 21), (20, 24), (20, 26), (20, 36), (21, 23), (21, 25), (21, 26), (21, 27), (21, 29), (22, 25), (22, 26), (22, 27), (22, 28), (22, 29), (23, 26), (23, 27), (23, 32), (24, 26), (24, 27), (24, 28), (25, 26), (25, 27), (25, 29), (27, 28), (27, 29), (29, 44), (30, 31), (32, 30), (32, 33), (32, 35), (32, 36), (32, 37), (33, 30), (33, 31), (33, 35), (33, 36), (33, 37), (33, 38), (34, 30), (34, 35), (34, 36), (35, 31), (35, 38), (36, 30), (36, 31), (36, 38), (37, 31), (37, 38), (39, 40), (39, 41), (39, 42), (39, 44), (39, 45), (40, 41), (40, 42), (40, 44), (40, 45), (40, 46), (40, 47), (41, 42), (41, 43), (41, 46), (41, 47), (42, 43), (42, 46), (43, 46), (43, 47), (44, 45), (44, 46), (44, 47), (45, 46), (46, 47)]

# Create a graph object
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between nodes 27 and 31
shortest_path_length = nx.shortest_path_length(G, source=27, target=31)

# Print the result
print(shortest_path_length)
```
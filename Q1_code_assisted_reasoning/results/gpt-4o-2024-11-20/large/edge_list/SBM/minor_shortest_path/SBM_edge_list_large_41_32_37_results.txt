```python
import networkx as nx

# Define the graph using the edge list
edge_list = [(0, 1), (0, 2), (0, 5), (0, 6), (0, 7), (0, 8), (0, 10), (0, 11), (1, 6), (1, 9), (1, 10), (1, 11), (2, 6), (2, 9), (2, 10), (2, 11), (3, 4), (3, 5), (3, 9), (3, 11), (4, 6), (4, 8), (4, 9), (4, 10), (4, 11), (4, 45), (5, 7), (5, 9), (5, 11), (6, 10), (7, 8), (7, 9), (7, 10), (7, 11), (8, 9), (9, 11), (9, 21), (10, 11), (12, 15), (12, 16), (12, 17), (12, 18), (12, 19), (12, 20), (12, 22), (13, 14), (13, 15), (13, 17), (13, 18), (13, 19), (13, 20), (13, 21), (13, 22), (13, 23), (14, 15), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (14, 22), (14, 23), (15, 17), (15, 18), (15, 19), (15, 32), (16, 19), (16, 23), (17, 18), (18, 20), (18, 21), (18, 22), (18, 26), (19, 21), (19, 22), (19, 23), (20, 21), (20, 22), (21, 22), (21, 23), (22, 23), (22, 45), (23, 35), (24, 25), (24, 26), (24, 30), (25, 27), (25, 28), (25, 29), (25, 30), (26, 27), (26, 31), (27, 28), (27, 29), (27, 30), (27, 31), (28, 29), (28, 30), (28, 31), (29, 30), (29, 31), (29, 43), (32, 24), (32, 27), (32, 28), (32, 34), (33, 24), (33, 26), (33, 28), (33, 31), (33, 34), (33, 35), (34, 24), (34, 25), (34, 27), (34, 28), (34, 29), (34, 35), (35, 26), (35, 28), (35, 30), (36, 38), (36, 43), (36, 44), (37, 38), (37, 40), (37, 41), (37, 44), (38, 39), (38, 44), (38, 45), (38, 46), (39, 40), (39, 41), (39, 44), (39, 45), (39, 46), (40, 41), (40, 43), (40, 44), (40, 45), (40, 46), (41, 42), (41, 43), (41, 45), (42, 45), (42, 46), (43, 44), (43, 45), (44, 45), (44, 46), (45, 46)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between nodes 32 and 37
shortest_path_length = nx.shortest_path_length(G, source=32, target=37)

# Print the result
print(shortest_path_length)
```
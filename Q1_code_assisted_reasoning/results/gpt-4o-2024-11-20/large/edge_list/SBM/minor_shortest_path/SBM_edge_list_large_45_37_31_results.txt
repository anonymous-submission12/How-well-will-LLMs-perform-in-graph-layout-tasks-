```python
import networkx as nx

# Define the edge list
edges = [
    (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (1, 2), (1, 3), (1, 6), (1, 8), 
    (2, 4), (2, 5), (2, 6), (3, 5), (3, 8), (3, 26), (4, 6), (4, 7), (4, 8), (5, 7), (5, 8), (6, 7), 
    (7, 8), (9, 10), (9, 12), (9, 13), (9, 14), (9, 15), (9, 16), (9, 17), (10, 11), (10, 12), (10, 15), 
    (10, 16), (11, 12), (11, 13), (12, 14), (12, 16), (12, 19), (12, 26), (13, 14), (14, 15), (14, 16), 
    (17, 18), (17, 21), (17, 22), (17, 24), (18, 21), (18, 24), (18, 38), (19, 20), (19, 21), (19, 22), 
    (20, 21), (20, 22), (20, 23), (20, 24), (21, 23), (21, 24), (22, 23), (22, 24), (25, 26), (25, 27), 
    (25, 29), (25, 30), (25, 34), (27, 28), (27, 30), (28, 29), (28, 31), (29, 31), (30, 31), (32, 25), 
    (32, 26), (32, 27), (32, 28), (32, 29), (32, 30), (32, 31), (33, 35), (33, 38), (33, 39), (34, 35), 
    (34, 36), (35, 39), (36, 37), (36, 38), (36, 39), (36, 40), (37, 40), (38, 40)
]

# Create a graph using NetworkX
G = nx.Graph(edges)

# Calculate the shortest path length between nodes 37 and 31
result = nx.shortest_path_length(G, source=37, target=31)

# Print the result
print(result)
```
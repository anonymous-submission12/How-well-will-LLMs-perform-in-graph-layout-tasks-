```python
import networkx as nx
from networkx.algorithms import community

# Define the graph from the edge list
edge_list = [
    (0, 1), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (1, 2), (1, 5), (1, 6),
    (1, 9), (2, 3), (2, 4), (2, 6), (2, 7), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8),
    (3, 9), (4, 5), (4, 7), (4, 8), (4, 12), (5, 6), (5, 7), (5, 8), (5, 17), (6, 8),
    (6, 9), (7, 10), (8, 9), (8, 45), (9, 22), (10, 11), (10, 12), (10, 14),
    (10, 15), (10, 16), (10, 19), (11, 14), (11, 16), (11, 18), (11, 19), (11, 43),
    (12, 13), (12, 14), (12, 15), (12, 18), (12, 19), (13, 14), (13, 15), (13, 16),
    (13, 18), (13, 19), (13, 25), (14, 16), (14, 17), (14, 18), (15, 18), (15, 19),
    (16, 17), (16, 19), (17, 18), (17, 19), (20, 21), (20, 22), (20, 26), (20, 27),
    (20, 28), (20, 29), (21, 22), (21, 25), (21, 28), (21, 29), (22, 23), (22, 24),
    (22, 25), (22, 27), (22, 29), (23, 25), (23, 26), (23, 28), (23, 29), (24, 26),
    (24, 29), (25, 28), (25, 29), (26, 27), (27, 28), (27, 36), (28, 29), (30, 31),
    (32, 30), (32, 33), (32, 36), (32, 39), (33, 31), (33, 34), (33, 35), (33, 37),
    (33, 39), (34, 30), (34, 31), (34, 35), (35, 30), (35, 37), (35, 39), (36, 31),
    (36, 38), (37, 30), (37, 39), (38, 30), (38, 39), (40, 41), (40, 43), (40, 45),
    (40, 46), (40, 48), (41, 43), (41, 44), (41, 45), (41, 47), (41, 48), (42, 43),
    (42, 44), (42, 45), (42, 46), (42, 47), (43, 44), (43, 47), (43, 48), (44, 47),
    (45, 46), (45, 48), (47, 48)
]

# Create a graph
G = nx.Graph(edge_list)

# Calculate communities using the greedy modularity communities algorithm
communities = list(community.greedy_modularity_communities(G))

# Print the number of communities
print(len(communities))
```
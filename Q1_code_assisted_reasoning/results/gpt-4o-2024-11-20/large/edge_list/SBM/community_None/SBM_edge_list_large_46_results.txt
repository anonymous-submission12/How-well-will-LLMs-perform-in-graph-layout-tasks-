```python
import networkx as nx
from networkx.algorithms.community import greedy_modularity_communities

# Define the edge list
edge_list = [(0, 2), (0, 3), (0, 5), (0, 6), (0, 7), (0, 9), (1, 8), (1, 9), (1, 11), (2, 6), (2, 8), (2, 9), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8), (3, 10), (4, 8), (4, 9), (4, 11), (5, 6), (5, 7), (5, 8), (5, 9), (5, 18), (6, 7), (6, 8), (6, 9), (6, 10), (6, 11), (7, 8), (7, 9), (7, 11), (7, 38), (8, 9), (8, 11), (9, 10), (10, 11), (12, 17), (12, 18), (12, 19), (12, 22), (12, 23), (12, 34), (13, 14), (13, 15), (13, 16), (13, 20), (13, 22), (13, 23), (14, 17), (14, 18), (14, 19), (14, 21), (14, 23), (15, 17), (15, 18), (15, 19), (15, 20), (15, 21), (15, 22), (16, 17), (16, 18), (16, 20), (16, 22), (16, 23), (17, 18), (17, 20), (17, 21), (17, 22), (17, 43), (18, 19), (18, 20), (18, 22), (18, 23), (19, 21), (19, 22), (19, 23), (21, 23), (22, 23), (23, 36), (24, 25), (24, 26), (24, 27), (24, 28), (24, 31), (25, 26), (25, 27), (25, 28), (25, 31), (26, 27), (26, 31), (27, 28), (28, 29), (28, 30), (29, 30), (31, 36), (32, 24), (32, 31), (32, 33), (32, 34), (32, 35), (32, 45), (33, 24), (33, 25), (33, 28), (33, 29), (33, 30), (33, 34), (34, 25), (34, 27), (34, 28), (34, 29), (34, 30), (34, 31), (35, 24), (35, 25), (35, 26), (35, 27), (35, 28), (35, 29), (35, 31), (36, 38), (36, 39), (36, 42), (36, 46), (36, 47), (37, 40), (37, 41), (37, 42), (37, 44), (37, 45), (37, 46), (37, 47), (38, 40), (38, 41), (38, 43), (38, 44), (38, 45), (38, 46), (38, 47), (39, 40), (39, 41), (39, 43), (39, 46), (39, 47), (40, 41), (40, 42), (40, 43), (40, 44), (40, 46), (41, 42), (41, 43), (41, 44), (41, 45), (41, 46), (42, 44), (42, 45), (42, 47), (44, 45), (44, 46), (44, 47), (45, 46), (46, 47)]

# Create the graph
G = nx.Graph(edge_list)

# Detect communities using the greedy modularity method
communities = greedy_modularity_communities(G)

# Output the number of communities
print(len(communities))
```
```python
import networkx as nx
from networkx.algorithms.community import greedy_modularity_communities

# Define the edge list
edge_list = [(0, 2), (0, 3), (0, 6), (0, 7), (1, 3), (1, 5), (1, 7), (1, 20), (2, 3), (2, 4), (2, 5), (2, 7), (2, 43), (2, 45), (3, 5), (3, 6), (3, 7), (4, 29), (6, 13), (6, 37), (7, 11), (8, 9), (8, 10), (8, 11), (8, 13), (8, 14), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14), (9, 15), (9, 17), (10, 11), (10, 12), (10, 13), (10, 15), (10, 35), (11, 14), (11, 15), (12, 13), (12, 14), (12, 27), (12, 28), (16, 18), (16, 19), (16, 21), (16, 22), (17, 18), (17, 19), (17, 20), (17, 21), (17, 22), (17, 23), (18, 19), (18, 20), (18, 21), (18, 23), (18, 47), (19, 20), (19, 21), (19, 23), (19, 31), (20, 23), (20, 46), (21, 24), (21, 45), (22, 28), (24, 26), (24, 27), (24, 30), (24, 31), (25, 26), (25, 27), (25, 28), (25, 29), (25, 31), (26, 27), (26, 29), (26, 30), (26, 31), (27, 28), (27, 30), (28, 30), (28, 31), (29, 31), (29, 34), (30, 31), (32, 34), (32, 35), (32, 36), (33, 34), (33, 35), (33, 36), (33, 37), (33, 38), (34, 35), (34, 36), (34, 37), (35, 36), (35, 37), (35, 38), (36, 37), (36, 39), (37, 39), (40, 41), (40, 42), (40, 43), (40, 46), (40, 47), (41, 42), (41, 44), (41, 47), (42, 45), (42, 47), (43, 45), (43, 46), (43, 47), (44, 45), (44, 46), (44, 47), (45, 47)]

# Create the graph
G = nx.Graph(edge_list)

# Detect communities using the greedy modularity method
communities = greedy_modularity_communities(G)

# Print the number of communities
print(len(communities))
```
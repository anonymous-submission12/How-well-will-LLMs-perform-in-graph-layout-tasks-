```python
import networkx as nx
from networkx.algorithms.community import greedy_modularity_communities

# Define edge list
edges = [(0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (1, 4), (1, 5), (1, 7), (1, 38), (2, 6), (3, 5), (3, 7), (3, 10), (4, 5), (4, 7), (4, 30), (5, 6), (5, 18), (7, 39), (8, 10), (8, 11), (8, 12), (8, 13), (8, 14), (8, 15), (9, 12), (9, 13), (9, 15), (10, 11), (10, 12), (10, 13), (10, 14), (11, 14), (11, 15), (12, 14), (13, 15), (14, 15), (14, 19), (16, 20), (16, 23), (16, 32), (17, 18), (17, 19), (17, 20), (17, 21), (17, 23), (18, 19), (18, 20), (18, 21), (18, 22), (19, 20), (19, 21), (19, 22), (20, 21), (21, 22), (21, 23), (21, 28), (22, 23), (22, 42), (24, 25), (24, 26), (24, 27), (24, 29), (24, 30), (25, 26), (25, 29), (26, 27), (26, 28), (26, 30), (27, 30), (29, 30), (32, 31), (32, 35), (32, 36), (32, 37), (33, 31), (33, 34), (33, 35), (33, 36), (33, 37), (34, 31), (35, 31), (35, 36), (35, 37), (36, 31), (36, 37), (38, 39), (38, 40), (38, 41), (38, 42), (38, 43), (38, 44), (39, 40), (39, 41), (39, 42), (39, 43), (39, 44), (40, 41), (40, 42), (40, 44), (41, 42), (41, 44), (42, 43), (43, 44)]

# Build graph
G = nx.Graph(edges)

# Detect communities
communities = greedy_modularity_communities(G)

# Output the number of communities
print(len(communities))
```
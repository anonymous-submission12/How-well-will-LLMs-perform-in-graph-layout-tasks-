```python
import networkx as nx
from networkx.algorithms.community import greedy_modularity_communities

# Define the graph data
edge_list = [
    (0, 1), (0, 3), (0, 5), (0, 7), (1, 2), (1, 6), (1, 7), (1, 9), (2, 3), (2, 4), (2, 5), (2, 6), 
    (2, 7), (2, 8), (3, 4), (3, 6), (3, 8), (4, 7), (6, 7), (7, 8), (7, 23), (8, 26), (8, 43), (9, 11),
    (9, 13), (9, 15), (9, 16), (9, 17), (10, 12), (10, 13), (10, 14), (10, 15), (10, 16), (10, 17), 
    (11, 12), (11, 15), (11, 16), (12, 13), (12, 17), (12, 20), (13, 17), (14, 15), (14, 16), (15, 17), 
    (18, 19), (18, 22), (18, 24), (18, 25), (18, 26), (19, 20), (19, 22), (19, 23), (20, 21), (20, 23),
    (21, 22), (21, 24), (21, 26), (22, 24), (22, 25), (22, 26), (22, 38), (23, 24), (23, 39), (24, 25), 
    (25, 26), (27, 28), (27, 29), (27, 30), (27, 31), (28, 29), (28, 30), (29, 30), (29, 31), (30, 31),
    (32, 29), (32, 30), (32, 34), (32, 35), (33, 27), (33, 35), (33, 37), (34, 27), (34, 29), (34, 31),
    (35, 27), (35, 28), (35, 29), (35, 31), (36, 37), (36, 39), (36, 40), (36, 41), (36, 42), (36, 43),
    (36, 44), (37, 38), (37, 40), (37, 41), (37, 42), (38, 39), (38, 40), (38, 41), (38, 42), (38, 43),
    (38, 44), (39, 40), (39, 42), (39, 44), (40, 41), (40, 42), (40, 43), (40, 44), (41, 43), (42, 43), 
    (42, 44)
]

# Build the graph
G = nx.Graph(edge_list)

# Detect communities
communities = greedy_modularity_communities(G)

# Print the number of communities
print(len(communities))
```
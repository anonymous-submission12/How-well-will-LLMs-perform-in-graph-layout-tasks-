```python
from collections import defaultdict

# Input graph data
edge_list = [(0, 1), (0, 2), (0, 5), (0, 6), (0, 7), (0, 8), (0, 12), (0, 25), (1, 2), (1, 3), (1, 6), (1, 7), (1, 8), (1, 10), (1, 11), (1, 12), (2, 5), (2, 6), (2, 7), (2, 8), (2, 11), (2, 12), (2, 27), (3, 5), (3, 6), (3, 9), (4, 5), (4, 8), (4, 9), (4, 10), (4, 12), (5, 6), (5, 7), (5, 8), (5, 10), (5, 11), (5, 12), (6, 9), (6, 10), (6, 12), (7, 10), (7, 11), (8, 9), (8, 10), (8, 11), (8, 12), (9, 10), (9, 11), (9, 12), (10, 11), (10, 12), (13, 16), (13, 17), (13, 20), (13, 21), (13, 22), (13, 23), (13, 25), (14, 16), (14, 18), (14, 19), (14, 21), (14, 22), (14, 24), (14, 25), (15, 17), (15, 20), (15, 21), (15, 22), (15, 24), (16, 18), (16, 20), (16, 22), (16, 24), (17, 18), (17, 19), (17, 23), (18, 20), (18, 21), (18, 22), (18, 23), (18, 24), (18, 25), (19, 21), (19, 22), (19, 23), (19, 24), (19, 25), (19, 28), (20, 25), (21, 24), (21, 27), (22, 25), (23, 24), (23, 25), (24, 25), (24, 49), (26, 27), (26, 29), (26, 30), (27, 28), (27, 29), (27, 30), (27, 31), (28, 30), (28, 31), (29, 30), (29, 31), (30, 31), (32, 26), (32, 27), (32, 29), (32, 30), (32, 31), (32, 37), (32, 41), (33, 26), (33, 31), (33, 35), (33, 37), (34, 26), (34, 27), (34, 28), (34, 29), (34, 31), (34, 35), (34, 36), (34, 37), (35, 26), (35, 27), (35, 28), (35, 29), (35, 30), (35, 31), (35, 36), (35, 37), (36, 27), (36, 29), (36, 30), (36, 31), (37, 27), (37, 29), (37, 30), (37, 31), (38, 43), (38, 46), (38, 48), (39, 40), (39, 41), (39, 42), (39, 46), (39, 47), (39, 48), (39, 49), (40, 41), (40, 43), (40, 45), (40, 46), (40, 47), (40, 48), (40, 49), (41, 42), (41, 44), (41, 47), (41, 48), (41, 49), (42, 43), (42, 44), (42, 45), (42, 47), (42, 48), (42, 49), (43, 46), (43, 48), (43, 49), (44, 45), (44, 47), (44, 48), (45, 46), (45, 49), (46, 48), (46, 49), (47, 48), (47, 49)]

# Calculate degrees of all nodes
degree_count = defaultdict(int)
for u, v in edge_list:
    degree_count[u] += 1
    degree_count[v] += 1

# Find the highest degree
highest_degree = max(degree_count.values())
print(highest_degree)
```
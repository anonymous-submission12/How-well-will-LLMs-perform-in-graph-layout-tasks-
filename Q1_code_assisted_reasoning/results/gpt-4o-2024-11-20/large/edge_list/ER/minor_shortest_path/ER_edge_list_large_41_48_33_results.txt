```python
import networkx as nx

# Define the graph using edge list
edges = [
    (0, 7), (0, 11), (0, 22), (0, 28), (0, 33), (0, 37), (1, 17), (1, 21), 
    (1, 43), (1, 45), (2, 9), (2, 15), (2, 17), (2, 18), (2, 30), (2, 37), 
    (2, 47), (3, 8), (3, 9), (3, 11), (3, 20), (3, 36), (4, 20), (4, 28), 
    (5, 15), (5, 19), (5, 24), (6, 33), (6, 37), (6, 39), (7, 8), (7, 10), 
    (7, 26), (7, 35), (7, 42), (7, 43), (8, 19), (8, 23), (8, 35), (8, 44), 
    (9, 10), (9, 13), (9, 27), (10, 11), (10, 26), (11, 41), (12, 38), 
    (12, 47), (13, 36), (13, 40), (13, 41), (13, 43), (13, 46), (13, 48), 
    (14, 30), (14, 31), (14, 37), (14, 43), (14, 48), (15, 16), (15, 18), 
    (15, 33), (15, 40), (15, 45), (15, 48), (16, 17), (16, 27), (16, 47), 
    (17, 27), (18, 22), (18, 30), (18, 36), (18, 44), (19, 32), (19, 37), 
    (19, 48), (20, 24), (20, 44), (21, 22), (21, 27), (22, 25), (22, 37), 
    (22, 44), (23, 33), (24, 31), (24, 35), (25, 26), (25, 31), (25, 40), 
    (27, 31), (29, 48), (30, 34), (30, 38), (31, 38), (31, 40), (31, 41), 
    (32, 39), (32, 47), (33, 34), (33, 38), (33, 41), (34, 39), (35, 36), 
    (35, 47), (36, 44), (37, 41), (38, 48), (43, 46), (43, 48)
]

# Create a graph using NetworkX
G = nx.Graph()
G.add_edges_from(edges)

# Calculate shortest path length
result = nx.shortest_path_length(G, source=48, target=33)
print(result)
```
```python
import networkx as nx

# Define the graph using edge list
edge_list = [(0, 2), (0, 10), (0, 15), (0, 18), (0, 22), (0, 32), (0, 38), (1, 19), (1, 28), (2, 11), (2, 32), (2, 40), (3, 9), (3, 23), (3, 32), (3, 35), (3, 39), (4, 9), (4, 24), (5, 8), (5, 26), (6, 7), (6, 17), (6, 23), (6, 27), (6, 33), (6, 36), (7, 13), (7, 16), (7, 20), (7, 25), (8, 29), (8, 43), (9, 19), (9, 35), (9, 43), (10, 18), (10, 23), (11, 18), (11, 29), (11, 36), (11, 38), (11, 41), (12, 15), (12, 28), (12, 34), (13, 29), (13, 39), (13, 40), (13, 44), (14, 16), (14, 24), (14, 39), (15, 33), (16, 31), (17, 20), (17, 21), (17, 29), (18, 33), (19, 21), (19, 26), (19, 27), (19, 40), (20, 22), (20, 24), (20, 27), (20, 34), (20, 42), (21, 27), (21, 31), (21, 38), (21, 40), (22, 23), (22, 40), (23, 30), (23, 40), (23, 43), (24, 26), (24, 33), (24, 37), (24, 40), (25, 35), (25, 40), (26, 30), (27, 33), (27, 35), (28, 40), (29, 36), (29, 44), (31, 36), (34, 43), (35, 39), (36, 39), (39, 41), (39, 42), (42, 44)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '36' and '32'
shortest_path_length = nx.shortest_path_length(G, source=36, target=32)

# Print the result
print(shortest_path_length)
```
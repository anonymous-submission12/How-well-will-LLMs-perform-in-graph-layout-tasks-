```python
import networkx as nx

# Define the graph from the edge list
edge_list = [(0, 8), (0, 22), (0, 27), (0, 43), (0, 46), (1, 8), (1, 24), (1, 25), (2, 7), (2, 9), (2, 12), (2, 25), (2, 37), (2, 39), (2, 44), (3, 7), (3, 24), (3, 36), (3, 38), (3, 41), (3, 43), (4, 37), (5, 7), (5, 13), (5, 45), (6, 7), (6, 27), (6, 38), (7, 11), (7, 31), (7, 43), (8, 16), (8, 17), (8, 28), (8, 43), (9, 16), (9, 24), (9, 27), (9, 28), (9, 36), (9, 41), (9, 42), (10, 12), (10, 22), (10, 30), (10, 45), (11, 18), (11, 23), (11, 25), (11, 26), (11, 28), (11, 29), (11, 33), (11, 36), (12, 17), (12, 36), (12, 44), (13, 21), (13, 35), (13, 40), (13, 41), (13, 43), (14, 22), (15, 33), (16, 35), (16, 40), (17, 25), (17, 29), (18, 27), (18, 36), (18, 40), (19, 20), (19, 21), (19, 23), (19, 37), (19, 45), (20, 37), (20, 44), (20, 45), (21, 23), (21, 24), (21, 43), (21, 44), (22, 25), (22, 39), (23, 44), (24, 25), (24, 30), (24, 36), (25, 31), (26, 27), (26, 33), (26, 44), (27, 33), (27, 41), (27, 45), (29, 31), (29, 32), (29, 39), (30, 35), (32, 46), (34, 39), (34, 42), (34, 44), (35, 46), (36, 45), (38, 42), (38, 45), (39, 44), (41, 46)]
G = nx.Graph(edge_list)

# Calculate the shortest path length between nodes '40' and '29'
shortest_path_length = nx.shortest_path_length(G, source=40, target=29)
print(shortest_path_length)
```
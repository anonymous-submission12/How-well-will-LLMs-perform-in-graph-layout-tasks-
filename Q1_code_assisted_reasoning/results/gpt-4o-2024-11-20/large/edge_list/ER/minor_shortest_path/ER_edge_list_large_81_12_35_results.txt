```python
import networkx as nx

# Define the graph using edge list
edges = [(0, 3), (0, 42), (1, 29), (1, 37), (1, 40), (1, 41), (1, 42), (2, 11), (2, 22), (2, 23), (2, 37), (3, 12), (3, 15), (3, 24), (3, 27), (3, 29), (3, 31), (3, 36), (4, 11), (4, 14), (4, 17), (4, 33), (4, 34), (4, 35), (4, 38), (4, 42), (5, 6), (5, 11), (5, 33), (6, 31), (7, 18), (7, 23), (7, 25), (7, 26), (7, 27), (7, 36), (7, 42), (8, 25), (8, 32), (8, 41), (9, 14), (9, 24), (9, 32), (10, 39), (10, 41), (11, 29), (12, 25), (13, 17), (13, 19), (13, 31), (14, 19), (14, 34), (14, 35), (14, 37), (14, 39), (15, 18), (15, 26), (15, 38), (15, 41), (16, 19), (16, 21), (16, 23), (16, 31), (17, 24), (17, 30), (17, 40), (18, 19), (18, 21), (18, 40), (19, 33), (20, 36), (20, 37), (20, 42), (21, 25), (21, 41), (22, 32), (22, 37), (23, 36), (23, 37), (26, 27), (26, 29), (27, 29), (27, 41), (28, 29), (28, 30), (29, 36), (30, 32), (31, 35), (31, 36), (33, 36), (33, 38), (34, 37), (35, 39), (37, 38), (38, 42)]

# Create a graph object
G = nx.Graph()
G.add_edges_from(edges)

# Compute the shortest path length between node '12' and '35'
result = nx.shortest_path_length(G, source=12, target=35)
print(result)
```
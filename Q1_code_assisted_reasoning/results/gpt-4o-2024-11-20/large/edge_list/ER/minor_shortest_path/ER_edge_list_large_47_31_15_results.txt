```python
import networkx as nx

# Define the graph using edge list
edge_list = [(0, 2), (0, 6), (0, 19), (0, 31), (0, 33), (1, 4), (1, 16), (1, 19), (1, 23), (1, 28), (1, 39), (2, 20), (2, 34), (2, 37), (2, 40), (3, 28), (3, 44), (4, 18), (4, 20), (4, 38), (5, 11), (5, 23), (5, 39), (5, 42), (6, 8), (6, 10), (6, 25), (6, 26), (6, 39), (7, 9), (7, 21), (7, 24), (7, 25), (8, 40), (9, 30), (10, 29), (11, 12), (11, 16), (11, 20), (11, 21), (12, 13), (12, 27), (12, 28), (12, 32), (13, 45), (14, 25), (14, 36), (14, 40), (14, 41), (15, 16), (15, 19), (15, 30), (16, 23), (16, 36), (17, 28), (17, 29), (17, 35), (17, 46), (18, 23), (18, 26), (18, 28), (19, 26), (20, 21), (21, 26), (21, 31), (21, 38), (21, 39), (21, 43), (22, 26), (22, 38), (22, 40), (23, 30), (23, 37), (23, 38), (24, 28), (24, 32), (24, 41), (24, 44), (24, 46), (26, 27), (26, 29), (26, 31), (26, 43), (27, 33), (28, 29), (29, 39), (29, 45), (31, 36), (31, 37), (32, 33), (32, 39), (33, 37), (34, 43), (35, 40), (36, 42), (38, 43), (41, 43)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '31' and '15'
shortest_path_length = nx.shortest_path_length(G, source=31, target=15)

# Print the result
print(shortest_path_length)
```
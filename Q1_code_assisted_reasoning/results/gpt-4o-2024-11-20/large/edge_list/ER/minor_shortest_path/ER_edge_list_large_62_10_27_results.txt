```python
import networkx as nx

# Define the graph using edge list
edges = [(0, 2), (0, 9), (0, 11), (0, 16), (0, 25), (0, 37), (0, 40), (0, 44), (1, 18), (1, 21), (1, 22), (1, 25), (1, 28), (1, 35), (1, 45), (2, 8), (2, 11), (2, 17), (2, 25), (2, 34), (2, 45), (2, 46), (3, 4), (3, 10), (3, 30), (4, 14), (4, 20), (4, 23), (4, 39), (5, 13), (5, 16), (5, 23), (5, 27), (5, 29), (5, 41), (5, 44), (5, 48), (6, 28), (6, 29), (6, 34), (6, 44), (6, 48), (7, 13), (7, 36), (7, 39), (7, 41), (7, 44), (8, 24), (8, 28), (8, 31), (8, 33), (8, 38), (8, 39), (9, 17), (10, 18), (10, 27), (10, 29), (10, 44), (11, 21), (11, 42), (11, 44), (12, 13), (12, 19), (12, 21), (12, 24), (12, 34), (13, 17), (13, 43), (14, 23), (14, 46), (15, 18), (15, 29), (15, 40), (16, 25), (16, 26), (16, 33), (16, 44), (17, 32), (17, 36), (17, 37), (17, 40), (17, 47), (19, 32), (19, 47), (20, 36), (20, 39), (21, 24), (21, 35), (21, 44), (21, 47), (22, 36), (22, 38), (22, 45), (22, 46), (23, 25), (23, 34), (23, 35), (23, 36), (23, 44), (24, 44), (25, 34), (25, 37), (25, 40), (26, 33), (26, 37), (27, 29), (27, 38), (28, 38), (29, 45), (30, 45), (31, 36), (31, 38), (31, 41), (31, 42), (32, 40), (32, 47), (32, 48), (34, 48), (35, 36), (38, 45), (40, 45), (43, 44)]

# Create a graph
G = nx.Graph(edges)

# Calculate the shortest path length between node '10' and '27'
result = nx.shortest_path_length(G, source=10, target=27)

# Print the result
print(result)
```
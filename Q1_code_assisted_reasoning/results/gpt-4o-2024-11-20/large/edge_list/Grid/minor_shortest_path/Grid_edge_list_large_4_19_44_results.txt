```python
# Import necessary libraries
import networkx as nx

# Define the edges of the graph
edge_list = [(0, 1), (0, 8), (1, 2), (1, 9), (2, 3), (2, 10), (3, 4), (3, 11),
             (4, 5), (4, 12), (5, 6), (5, 13), (6, 7), (6, 14), (7, 15), (8, 9),
             (8, 16), (9, 10), (9, 17), (10, 11), (10, 18), (11, 12), (11, 19),
             (12, 13), (12, 20), (13, 14), (13, 21), (14, 15), (14, 22), (15, 23),
             (16, 17), (16, 24), (17, 18), (17, 25), (18, 19), (18, 26), (19, 20),
             (19, 27), (20, 21), (20, 28), (21, 22), (21, 29), (22, 23), (22, 30),
             (23, 31), (24, 25), (24, 32), (25, 26), (25, 33), (26, 27), (26, 34),
             (27, 28), (27, 35), (28, 29), (28, 36), (29, 30), (29, 37), (30, 31),
             (30, 38), (31, 39), (32, 33), (32, 40), (33, 34), (33, 41), (34, 35),
             (34, 42), (35, 36), (35, 43), (36, 37), (36, 44), (37, 38), (37, 45),
             (38, 39), (38, 46), (39, 47), (40, 41), (41, 42), (42, 43), (43, 44),
             (44, 45), (45, 46), (46, 47)]

# Create the graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Compute the shortest path length between node '19' and '44'
shortest_path_length = nx.shortest_path_length(G, source=19, target=44)

# Print the result
print(shortest_path_length)
```
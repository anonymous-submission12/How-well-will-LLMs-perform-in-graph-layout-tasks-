```python
from collections import defaultdict

def dfs(node, visited, graph):
    stack = [node]
    while stack:
        current = stack.pop()
        for neighbor in graph[current]:
            if neighbor not in visited:
                visited.add(neighbor)
                stack.append(neighbor)

def count_communities(graph):
    visited = set()
    communities = 0
    for node in graph:
        if node not in visited:
            visited.add(node)
            dfs(node, visited, graph)
            communities += 1
    return communities

graph = {0: [2, 3, 4, 5, 6], 1: [3, 4, 6], 2: [0, 3, 5, 6], 3: [0, 1, 2, 5, 6], 4: [0, 1, 5], 5: [0, 2, 3, 4, 6, 11], 6: [0, 1, 2, 3, 5, 17], 7: [8, 9, 10, 11, 12, 13], 8: [7, 9, 10, 11, 13], 9: [7, 8, 10, 11, 12, 13], 10: [7, 8, 9, 11, 13], 11: [5, 7, 8, 9, 10, 12, 13, 18], 12: [7, 9, 11, 13], 13: [7, 8, 9, 10, 11, 12], 14: [16, 17, 18, 19, 20], 15: [16, 17, 18, 19, 20], 16: [14, 15, 17, 18, 19], 17: [6, 14, 15, 16, 18, 19, 20], 18: [11, 14, 15, 16, 17, 19, 20], 19: [14, 15, 16, 17, 18, 20], 20: [14, 15, 17, 18, 19]}
print(count_communities(graph))
```
```python
from collections import defaultdict

def find_communities(graph):
    visited = set()
    communities = []

    def dfs(node, community):
        visited.add(node)
        community.append(node)
        for neighbor in graph[node]:
            if neighbor not in visited:
                dfs(neighbor, community)

    for node in graph:
        if node not in visited:
            community = []
            dfs(node, community)
            communities.append(community)

    return len(communities)

graph = {0: [3, 4, 6, 7], 1: [2, 3, 4, 5, 6, 7, 17, 18], 2: [1, 3, 5, 6], 3: [0, 1, 2, 4, 5, 6, 9, 20], 4: [0, 1, 3, 5, 6, 7], 5: [1, 2, 3, 4, 6, 7], 6: [0, 1, 2, 3, 4, 5], 7: [0, 1, 4, 5], 8: [11, 13], 9: [3, 10, 11, 12, 13, 14], 10: [9, 11, 12, 13, 14], 11: [8, 9, 10, 12, 13, 14, 15], 12: [9, 10, 11, 13, 14], 13: [8, 9, 10, 11, 12, 23], 14: [9, 10, 11, 12], 15: [11, 16, 17, 18, 19, 20, 21], 16: [15, 18, 20], 17: [1, 15, 18, 19, 20], 18: [1, 15, 16, 17, 19, 20, 21], 19: [15, 17, 18, 20, 21], 20: [3, 15, 16, 17, 18, 19, 21, 26], 21: [15, 18, 19, 20], 22: [23, 25, 26, 27, 28], 23: [13, 22, 24, 25, 28], 24: [23, 26, 27, 28], 25: [22, 23, 26, 28], 26: [20, 22, 24, 25, 27], 27: [22, 24, 26, 28], 28: [22, 23, 24, 25, 27]}

print(find_communities(graph))
```
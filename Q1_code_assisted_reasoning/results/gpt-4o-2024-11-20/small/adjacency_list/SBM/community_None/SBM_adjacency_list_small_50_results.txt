```python
from collections import defaultdict

def dfs(node, graph, visited):
    stack = [node]
    while stack:
        current = stack.pop()
        for neighbor in graph[current]:
            if neighbor not in visited:
                visited.add(neighbor)
                stack.append(neighbor)

def count_communities(graph):
    visited = set()
    communities = 0
    for node in graph:
        if node not in visited:
            visited.add(node)
            dfs(node, graph, visited)
            communities += 1
    return communities

graph = {0: [2, 3, 4, 5], 1: [2, 3, 4, 5, 16], 2: [0, 1, 3, 5, 8], 3: [0, 1, 2, 5, 10], 4: [0, 1, 5], 5: [0, 1, 2, 3, 4], 6: [9, 10], 7: [8, 10], 8: [2, 7, 10], 9: [6, 10], 10: [3, 6, 7, 8, 9], 11: [12, 14], 12: [11, 14, 15, 20], 13: [14, 15], 14: [11, 12, 13, 20], 15: [12, 13], 16: [1, 17, 18, 19, 20], 17: [16, 18], 18: [16, 17, 19, 20], 19: [16, 18, 20], 20: [12, 14, 16, 18, 19]}
print(count_communities(graph))
```
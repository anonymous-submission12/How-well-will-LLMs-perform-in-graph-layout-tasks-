```python
import networkx as nx

# Define the graph using the edge list
edge_list = [(0, 4), (0, 5), (0, 7), (1, 2), (1, 3), (1, 5), (1, 7), (2, 3), (2, 4), (2, 5), (2, 6), (3, 5), (3, 6), (3, 7), (3, 22), (4, 5), (4, 6), (4, 7), (5, 6), (5, 7), (6, 7), (8, 10), (8, 11), (8, 12), (8, 13), (8, 14), (8, 15), (9, 11), (9, 12), (9, 13), (9, 14), (9, 15), (10, 11), (10, 12), (10, 13), (10, 14), (10, 15), (11, 12), (11, 13), (12, 13), (12, 14), (12, 15), (13, 14), (13, 15), (14, 18), (16, 17), (16, 18), (16, 20), (16, 21), (16, 22), (17, 19), (17, 20), (17, 21), (17, 22), (18, 19), (18, 20), (18, 21), (18, 22), (19, 20), (19, 21), (19, 22), (20, 21)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '1' and '8'
result = nx.shortest_path_length(G, source=1, target=8)
print(result)
```
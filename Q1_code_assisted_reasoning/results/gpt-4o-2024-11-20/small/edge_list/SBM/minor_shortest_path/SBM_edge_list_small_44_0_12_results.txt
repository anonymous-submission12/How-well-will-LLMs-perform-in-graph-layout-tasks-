```python
import networkx as nx

# Define the graph using the edge list
edge_list = [(0, 1), (0, 2), (0, 4), (0, 5), (1, 3), (1, 5), (1, 6), (1, 7), (2, 5), (2, 6), (2, 13), (2, 19), (2, 23), (3, 4), (3, 5), (3, 6), (3, 7), (3, 13), (4, 5), (4, 6), (4, 7), (5, 6), (5, 13), (5, 21), (6, 7), (8, 9), (8, 10), (8, 11), (8, 12), (9, 11), (9, 12), (9, 13), (9, 14), (10, 11), (10, 12), (10, 13), (10, 14), (10, 20), (11, 12), (11, 13), (11, 14), (12, 13), (12, 14), (13, 14), (13, 20), (15, 16), (15, 18), (15, 19), (15, 20), (15, 21), (16, 18), (16, 20), (16, 21), (17, 18), (17, 20), (17, 21), (18, 19), (18, 21), (19, 20), (19, 21), (20, 21), (22, 23), (22, 24), (22, 26), (22, 27), (22, 28), (23, 24), (23, 25), (23, 27), (23, 28), (24, 25), (24, 27), (24, 28), (25, 27), (27, 28)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '0' and '12'
shortest_path_length = nx.shortest_path_length(G, source=0, target=12)

# Print the result
print(shortest_path_length)
```
```python
import networkx as nx

# Define the graph using edge list
edges = [(0, 1), (0, 2), (0, 3), (1, 2), (1, 4), (1, 5), (1, 9), (2, 4), (2, 5), (2, 15), 
         (3, 5), (4, 5), (6, 8), (6, 10), (6, 11), (7, 8), (7, 9), (7, 10), (7, 11), 
         (8, 9), (8, 10), (8, 20), (9, 10), (9, 11), (12, 13), (12, 14), (12, 15), 
         (12, 16), (12, 17), (13, 14), (13, 15), (13, 17), (14, 17), (15, 16), 
         (15, 17), (18, 19), (18, 20), (18, 22), (19, 20), (19, 22), (20, 22), (21, 22)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edges)

# Calculate the shortest path length between node '5' and '19'
result = nx.shortest_path_length(G, source=5, target=19)
print(result)
```
```python
import networkx as nx

# Define the graph using edge list
edge_list = [(0, 1), (0, 3), (1, 2), (2, 5), (3, 4), (3, 5), (4, 5), (5, 11), (6, 8), (6, 9), (6, 10), (6, 11), (6, 13), (7, 10), (7, 11), (8, 9), (8, 10), (8, 11), (9, 10), (9, 11), (10, 11), (12, 13), (12, 15), (12, 16), (12, 17), (13, 15), (13, 17), (13, 25), (14, 15), (14, 17), (15, 16), (15, 17), (15, 22), (16, 17), (18, 19), (18, 21), (18, 22), (19, 20), (19, 21), (20, 22), (23, 24), (23, 25), (23, 26), (23, 27), (24, 25), (24, 26), (24, 27), (25, 26), (25, 27), (26, 27)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '23' and '11'
result = nx.shortest_path_length(G, source=23, target=11)

# Print the result
print(result)
```
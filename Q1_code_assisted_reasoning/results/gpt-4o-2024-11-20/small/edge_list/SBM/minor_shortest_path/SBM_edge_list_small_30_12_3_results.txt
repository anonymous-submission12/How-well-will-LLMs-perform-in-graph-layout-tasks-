```python
import networkx as nx

# Define the graph as an edge list
edge_list = [(0, 2), (0, 3), (0, 4), (0, 12), (1, 3), (1, 4), (1, 5), (1, 6), (1, 12), (1, 16), 
             (2, 3), (2, 4), (2, 5), (2, 6), (3, 4), (3, 5), (3, 13), (3, 18), (4, 5), (4, 6), 
             (5, 9), (6, 7), (7, 8), (7, 9), (7, 10), (7, 11), (7, 13), (8, 9), (8, 10), (8, 12), 
             (8, 13), (9, 10), (9, 11), (9, 13), (10, 11), (10, 12), (11, 12), (11, 13), (11, 18), 
             (14, 15), (14, 16), (14, 17), (14, 18), (14, 19), (14, 20), (15, 16), (15, 17), 
             (15, 18), (15, 19), (15, 20), (16, 17), (16, 18), (16, 19), (17, 18), (17, 19), 
             (17, 20), (18, 19), (18, 20), (19, 20)]

# Create an undirected graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path between node '12' and '3'
shortest_path_length = nx.shortest_path_length(G, source=12, target=3)

# Print the result
print(shortest_path_length)
```
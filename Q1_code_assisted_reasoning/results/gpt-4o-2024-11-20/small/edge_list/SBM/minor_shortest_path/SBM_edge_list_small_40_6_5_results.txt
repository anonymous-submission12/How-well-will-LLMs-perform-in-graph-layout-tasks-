```python
import networkx as nx

# Define the graph using the edge list
edge_list = [(0, 1), (0, 2), (0, 4), (0, 5), (1, 2), (1, 3), (1, 4), (1, 5), (1, 11), (2, 3), (2, 4), (2, 5), (3, 4), (3, 10), (3, 17), (4, 5), (6, 7), (6, 8), (6, 10), (6, 11), (7, 11), (8, 9), (8, 10), (9, 10), (9, 11), (10, 14), (11, 15), (12, 13), (12, 15), (12, 16), (13, 14), (13, 15), (13, 16), (14, 15), (14, 16), (15, 16), (17, 18), (17, 19), (17, 20), (17, 21), (18, 19), (18, 20), (20, 21)]

# Create a graph object
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between nodes '6' and '5'
shortest_path_length = nx.shortest_path_length(G, source=6, target=5)

# Print the result
print(shortest_path_length)
```
```python
import networkx as nx
from networkx.algorithms.community import greedy_modularity_communities

# Define the graph from the edge list
edge_list = [(0, 1), (0, 2), (0, 4), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11), (1, 13), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9), (2, 10), (2, 11), (2, 12), (2, 13), (2, 21), (3, 5), (3, 7), (3, 9), (3, 12), (3, 13), (3, 22), (4, 5), (4, 6), (4, 7), (4, 8), (4, 10), (4, 11), (4, 13), (5, 7), (5, 8), (5, 9), (5, 10), (5, 11), (5, 13), (6, 7), (6, 9), (6, 10), (6, 11), (7, 9), (7, 10), (7, 12), (7, 13), (8, 9), (8, 12), (8, 13), (9, 11), (9, 12), (9, 22), (10, 11), (10, 12), (10, 13), (11, 12), (12, 13), (12, 17), (14, 15), (14, 16), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (14, 22), (14, 23), (14, 24), (14, 25), (14, 27), (15, 16), (15, 17), (15, 19), (15, 21), (15, 22), (15, 23), (15, 24), (15, 26), (15, 27), (16, 17), (16, 18), (16, 19), (16, 21), (16, 23), (16, 24), (16, 25), (16, 26), (16, 27), (17, 18), (17, 20), (17, 21), (17, 22), (17, 25), (17, 26), (17, 27), (18, 20), (18, 24), (18, 26), (18, 27), (19, 22), (19, 23), (19, 24), (19, 25), (19, 27), (20, 21), (20, 22), (20, 24), (20, 27), (21, 22), (21, 24), (21, 25), (21, 26), (21, 27), (22, 23), (22, 24), (22, 25), (22, 26), (22, 27), (23, 24), (23, 25), (24, 25), (24, 26), (25, 26), (25, 27), (26, 27)]

G = nx.Graph(edge_list)

# Detect communities using the greedy modularity method
communities = greedy_modularity_communities(G)

# Output the number of communities
print(len(communities))
```
```python
import networkx as nx

# Define the edge list
edge_list = [(0, 1), (0, 15), (1, 2), (1, 16), (2, 3), (2, 17), (3, 4), (3, 18), 
             (4, 5), (4, 19), (5, 6), (5, 20), (6, 7), (6, 21), (7, 8), (7, 22), 
             (8, 9), (8, 23), (9, 10), (9, 24), (10, 11), (10, 25), (11, 12), 
             (11, 26), (12, 13), (12, 27), (13, 14), (13, 28), (14, 29), 
             (15, 16), (16, 17), (17, 18), (18, 19), (19, 20), (20, 21), 
             (21, 22), (22, 23), (23, 24), (24, 25), (25, 26), (26, 27), 
             (27, 28), (28, 29)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Check for grid pattern
def is_grid_graph(G):
    nodes = list(G.nodes)
    rows = set()
    cols = set()
    for node in nodes:
        row, col = divmod(node, 15)  # Assuming a grid structure
        rows.add(row)
        cols.add(col)
    expected_edges = 0
    for row in rows:
        for col in cols:
            if (row, col) in nodes:
```
```python
import networkx as nx

# Define the graph from edge list
edges = [(0, 1), (0, 7), (1, 2), (1, 8), (2, 3), (2, 9), (3, 4), (3, 10),
         (4, 5), (4, 11), (5, 6), (5, 12), (6, 13), (7, 8), (7, 14), (8, 9), 
         (8, 15), (9, 10), (9, 16), (10, 11), (10, 17), (11, 12), (11, 18), 
         (12, 13), (12, 19), (13, 20), (14, 15), (14, 21), (15, 16), (15, 22), 
         (16, 17), (16, 23), (17, 18), (17, 24), (18, 19), (18, 25), (19, 20), 
         (19, 26), (20, 27), (21, 22), (22, 23), (23, 24), (24, 25), (25, 26), (26, 27)]

# Create an undirected graph
G = nx.Graph(edges)

# Compute the shortest path length between nodes 14 and 21
shortest_path_length = nx.shortest_path_length(G, source=14, target=21)

# Print the result
print(shortest_path_length)
```
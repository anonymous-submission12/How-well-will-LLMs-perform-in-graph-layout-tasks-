```python
import networkx as nx

# Define the graph as an edge list
edge_list = [
    (0, 9), (0, 11), (1, 3), (1, 11), (1, 20), (2, 7), (2, 13), (3, 10), 
    (3, 13), (3, 16), (4, 18), (4, 19), (4, 21), (5, 13), (5, 23), (5, 25), 
    (5, 26), (6, 21), (6, 25), (7, 11), (7, 14), (8, 11), (8, 16), (8, 17), 
    (8, 18), (8, 22), (8, 26), (9, 10), (9, 11), (9, 15), (9, 20), (10, 20), 
    (11, 15), (12, 14), (14, 22), (15, 16), (15, 21), (17, 23), (18, 25), 
    (20, 23), (21, 24), (21, 26)
]

# Create a graph using NetworkX
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between nodes 18 and 11
shortest_path_length = nx.shortest_path_length(G, source=18, target=11)

# Print the result
print(shortest_path_length)
```
```python
import networkx as nx

# Define the edge list
edges = [(0, 15), (0, 20), (1, 5), (1, 8), (1, 11), (1, 16), (1, 17), (1, 21), (1, 26),
         (2, 12), (2, 19), (2, 22), (2, 25), (3, 7), (3, 20), (4, 14), (4, 18), (4, 21),
         (5, 8), (5, 12), (5, 18), (6, 9), (6, 23), (7, 9), (7, 10), (7, 12), (8, 11),
         (8, 19), (8, 21), (8, 23), (8, 24), (9, 13), (9, 14), (9, 18), (9, 20), (9, 27),
         (10, 16), (10, 25), (11, 27), (14, 15), (14, 17), (14, 24), (15, 27), (17, 20),
         (17, 22), (18, 19), (20, 21), (21, 24), (25, 27)]

# Create a graph
G = nx.Graph(edges)

# Calculate the shortest path length between node '26' and '0'
result = nx.shortest_path_length(G, source=26, target=0)

# Print the result
print(result)
```
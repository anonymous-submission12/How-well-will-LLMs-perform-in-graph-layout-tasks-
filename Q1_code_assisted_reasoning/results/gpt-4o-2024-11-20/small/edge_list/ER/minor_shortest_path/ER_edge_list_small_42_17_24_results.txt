```python
import networkx as nx

# Define the graph using edge list
edge_list = [(0, 1), (0, 7), (0, 11), (0, 14), (0, 17), (0, 19), (0, 23), (0, 26), 
             (1, 14), (1, 17), (2, 8), (2, 24), (2, 25), (3, 19), (3, 27), (4, 5), 
             (4, 6), (4, 20), (4, 25), (5, 7), (5, 12), (5, 15), (5, 21), (6, 26), 
             (7, 11), (7, 15), (9, 14), (9, 16), (10, 14), (10, 19), (10, 22), 
             (11, 15), (12, 18), (12, 24), (12, 26), (13, 14), (13, 17), (13, 27), 
             (14, 20), (14, 23), (15, 16), (15, 23), (16, 19), (16, 22), (16, 24), 
             (17, 20), (17, 24), (17, 27), (18, 22), (19, 26), (20, 24), (21, 22), 
             (21, 23), (21, 25), (21, 27), (26, 27)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '17' and '24'
result = nx.shortest_path_length(G, source=17, target=24)
print(result)
```
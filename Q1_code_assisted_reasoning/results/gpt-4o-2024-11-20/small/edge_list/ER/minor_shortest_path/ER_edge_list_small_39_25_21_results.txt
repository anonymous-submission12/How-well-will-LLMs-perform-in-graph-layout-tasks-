```python
import networkx as nx

# Define the graph using edge list
edge_list = [(0, 6), (0, 10), (0, 24), (1, 7), (1, 15), (1, 17), (1, 20), (1, 22), (1, 23), 
             (2, 4), (2, 6), (2, 7), (2, 13), (2, 16), (2, 17), (2, 21), (3, 5), (3, 7), 
             (3, 10), (3, 11), (3, 12), (3, 14), (3, 15), (3, 19), (3, 20), (3, 22), 
             (4, 17), (4, 24), (5, 6), (5, 21), (6, 13), (7, 11), (7, 16), (8, 9), 
             (8, 10), (8, 22), (9, 11), (9, 24), (10, 17), (12, 14), (12, 25), 
             (13, 17), (13, 18), (14, 16), (14, 24), (15, 19), (15, 23), (16, 17), 
             (17, 19), (17, 22), (18, 19), (18, 24), (20, 24), (21, 25), (22, 26)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '25' and '21'
shortest_path_length = nx.shortest_path_length(G, source=25, target=21)

# Print the result
print(shortest_path_length)
```
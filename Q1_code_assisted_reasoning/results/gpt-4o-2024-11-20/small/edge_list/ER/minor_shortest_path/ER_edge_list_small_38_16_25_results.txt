```python
import networkx as nx

# Define the graph using edge list
edges = [(0, 13), (0, 18), (0, 20), (1, 6), (1, 8), (1, 10), (1, 16), (1, 17), (2, 28), (3, 16), (3, 18), (3, 28), (3, 29), (4, 15), (4, 17), (4, 23), (5, 23), (6, 12), (6, 22), (7, 11), (7, 18), (7, 23), (8, 9), (8, 26), (9, 10), (9, 17), (9, 21), (10, 27), (11, 15), (11, 19), (11, 21), (11, 26), (11, 28), (12, 16), (12, 17), (12, 29), (13, 17), (14, 16), (14, 21), (14, 22), (14, 26), (15, 20), (15, 24), (16, 17), (16, 25), (17, 21), (17, 25), (18, 21), (18, 29), (20, 25), (20, 29), (21, 27), (22, 24), (22, 26), (22, 29), (23, 27), (25, 26), (27, 28)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edges)

# Calculate the shortest path length between node '16' and '25'
result = nx.shortest_path_length(G, source=16, target=25)

# Print the result
print(result)
```
```python
import networkx as nx

# Define the graph using edge list
edge_list = [(0, 12), (1, 9), (1, 10), (1, 21), (2, 3), (2, 6), (2, 17), (2, 21), (2, 24), 
             (3, 4), (3, 5), (3, 8), (3, 13), (4, 10), (4, 11), (4, 15), (4, 20), (5, 6), 
             (6, 8), (6, 9), (6, 26), (6, 28), (7, 27), (8, 22), (8, 25), (9, 11), (10, 22), 
             (10, 23), (11, 22), (12, 16), (12, 20), (13, 14), (13, 15), (14, 18), (14, 19), 
             (14, 28), (16, 28), (17, 28), (18, 22), (19, 22), (20, 23), (22, 23), (23, 27), 
             (27, 28)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '28' and '12'
shortest_path_length = nx.shortest_path_length(G, source=28, target=12)

# Print the result
print(shortest_path_length)
```
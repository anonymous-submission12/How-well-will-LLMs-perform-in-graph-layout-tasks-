```python
import networkx as nx

# Define the graph using edge list
edge_list = [(0, 12), (1, 2), (1, 9), (2, 4), (2, 10), (2, 11), (2, 26), (3, 23), (4, 15), (4, 19), (4, 24), (5, 7), (5, 15), (5, 20), (5, 24), (6, 15), (6, 23), (7, 25), (7, 26), (8, 12), (8, 20), (9, 21), (9, 22), (9, 23), (10, 21), (11, 18), (12, 13), (12, 15), (12, 20), (12, 24), (14, 17), (14, 22), (15, 22), (16, 24), (16, 26), (17, 23), (17, 26), (18, 25), (18, 26), (19, 22), (19, 26), (21, 24), (23, 24), (23, 26)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '2' and '16'
result = nx.shortest_path_length(G, source=2, target=16)

# Print the result
print(result)
```
```python
import networkx as nx

# Define the graph as an edge list
edge_list = [
    (0, 5), (0, 15), (1, 14), (1, 15), (2, 3), (2, 13), (2, 19), (2, 27), 
    (3, 18), (3, 26), (4, 9), (4, 17), (4, 19), (4, 28), (6, 7), (6, 8), 
    (6, 13), (6, 15), (6, 16), (6, 25), (6, 26), (7, 13), (7, 19), (7, 27), 
    (8, 19), (8, 21), (9, 22), (9, 23), (10, 13), (10, 16), (10, 24), 
    (11, 12), (11, 13), (11, 23), (11, 26), (11, 28), (13, 18), (13, 22), 
    (13, 28), (15, 22), (16, 23), (17, 28), (19, 23), (20, 22), (20, 26)
]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '8' and node '15'
result = nx.shortest_path_length(G, source=8, target=15)
print(result)
```
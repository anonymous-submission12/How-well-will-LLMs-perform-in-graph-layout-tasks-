```python
import networkx as nx

# Define the graph using edge list
edge_list = [(0, 19), (1, 16), (2, 4), (2, 8), (2, 17), (2, 29), (3, 9), (3, 27), (4, 7), (4, 22), (4, 27), 
             (5, 12), (5, 16), (5, 25), (5, 26), (5, 27), (6, 19), (6, 24), (7, 14), (7, 27), (8, 15), (8, 18), 
             (9, 18), (10, 21), (10, 22), (11, 15), (11, 29), (12, 18), (13, 16), (13, 18), (14, 15), (14, 19), 
             (14, 22), (14, 25), (14, 28), (15, 23), (16, 18), (16, 19), (16, 21), (16, 28), (18, 19), (19, 21), 
             (19, 22), (19, 29), (20, 24), (22, 27), (25, 29)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '1' and '8'
shortest_path_length = nx.shortest_path_length(G, source=1, target=8)

# Print the result
print(shortest_path_length)
```
```python
import networkx as nx

# Edge list of the graph
edge_list = [
    (0, 7), (0, 14), (0, 18), (0, 21), (0, 22), (1, 4), (1, 26), (2, 3), (2, 4), 
    (2, 6), (2, 11), (2, 17), (2, 21), (2, 25), (3, 5), (3, 17), (3, 20), (3, 21), 
    (3, 22), (4, 16), (4, 18), (4, 20), (4, 22), (5, 22), (5, 27), (6, 8), (6, 13), 
    (7, 21), (7, 28), (8, 13), (8, 26), (8, 28), (9, 11), (10, 24), (11, 23), 
    (11, 24), (12, 17), (13, 16), (13, 22), (14, 17), (14, 22), (15, 19), (15, 24), 
    (15, 27), (16, 27), (18, 23), (18, 24), (19, 23), (19, 26), (20, 26), (20, 27), 
    (21, 22), (21, 25), (22, 26), (23, 25)
]

# Create an undirected graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate shortest path length between nodes '2' and '17'
result = nx.shortest_path_length(G, source=2, target=17)
print(result)
```
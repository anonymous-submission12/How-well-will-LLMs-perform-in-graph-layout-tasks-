```python
import networkx as nx

# Define the graph using edge list
edge_list = [(0, 11), (0, 20), (1, 5), (1, 9), (2, 5), (2, 11), (2, 28), (3, 15), (3, 17), (3, 24), 
             (4, 19), (4, 21), (4, 27), (6, 9), (6, 24), (7, 9), (7, 19), (7, 20), (7, 22), (7, 23), 
             (8, 9), (8, 13), (8, 15), (8, 23), (8, 26), (9, 14), (9, 15), (9, 25), (9, 26), (10, 17), 
             (10, 24), (11, 13), (11, 19), (11, 20), (11, 23), (11, 25), (12, 14), (12, 18), (12, 28), 
             (13, 17), (14, 22), (15, 19), (15, 23), (16, 23), (17, 25), (18, 19), (19, 21), (19, 25), 
             (19, 28), (20, 27), (24, 28), (25, 26)]

# Create a graph
G = nx.Graph()
G.add_edges_from(edge_list)

# Calculate the shortest path length between node '11' and '14'
shortest_path_length = nx.shortest_path_length(G, source=11, target=14)

# Print the result
print(shortest_path_length)
```
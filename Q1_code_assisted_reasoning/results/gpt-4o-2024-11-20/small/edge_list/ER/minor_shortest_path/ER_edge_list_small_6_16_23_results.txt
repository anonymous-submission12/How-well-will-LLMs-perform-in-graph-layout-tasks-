```python
import networkx as nx

# Define the graph with edge_list
edges = [(0, 2), (0, 5), (0, 10), (0, 18), (1, 5), (1, 13), (1, 26), (2, 6), (2, 24), (2, 26), (3, 13), (3, 18), (3, 23), (3, 25), (4, 6), (4, 8), (4, 11), (4, 12), (4, 17), (4, 24), (4, 25), (5, 6), (5, 13), (5, 25), (6, 7), (6, 11), (6, 20), (6, 23), (7, 17), (7, 20), (8, 19), (9, 16), (9, 20), (9, 21), (11, 12), (11, 21), (12, 15), (12, 24), (14, 15), (16, 24), (17, 26), (19, 25), (21, 22), (23, 24), (24, 25)]

# Create the graph
G = nx.Graph()
G.add_edges_from(edges)

# Calculate the shortest path length between nodes 16 and 23
shortest_path_length = nx.shortest_path_length(G, source=16, target=23)

# Print the result
print(shortest_path_length)
```
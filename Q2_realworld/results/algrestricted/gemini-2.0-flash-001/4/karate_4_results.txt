```python
import json
import random

def community_detection(edge_list):
    """
    Detects communities in a graph using a simple label propagation algorithm.

    Args:
        edge_list: A list of tuples representing the edges of the graph.

    Returns:
        A dictionary where keys are node IDs and values are community IDs.
    """

    # Initialize each node as its own community
    communities = {node: node for edge in edge_list for node in edge}
    nodes = list(communities.keys())

    # Build adjacency list
    adj = {node: [] for node in nodes}
    for u, v in edge_list:
        adj[u].append(v)
        adj[v].append(u)

    # Iterate until convergence
    changed = True
    while changed:
        changed = False
        random.shuffle(nodes)  # Randomize node order for each iteration
        for node in nodes:
            neighbor_communities = {}
            for neighbor in adj[node]:
                neighbor_community = communities[neighbor]
                neighbor_communities[neighbor_community] = neighbor_communities.get(neighbor_community, 0) + 1

            # Find the most frequent community among neighbors
            if neighbor_communities:
                most_frequent_community = max(neighbor_communities, key=neighbor_communities.get)

                # Update community if a neighbor has a more frequent community
                if most_frequent_community != communities[node]:
                    communities[node] = most_frequent_community
                    changed = True

    return communities


def layout_graph(edge_list):
    """
    Generates a layout for the graph, keeping the community structure clear.

    Args:
        edge_list: A list of tuples representing the edges of the graph.

    Returns:
        A dictionary where keys are node IDs and values are (x, y) coordinates.
    """

    communities = community_detection(edge_list)
    community_nodes = {}
    for node, community in communities.items():
        if community not in community_nodes:
            community_nodes[community] = []
        community_nodes[community].append(node)

    # Assign positions to communities
    community_positions = {}
    num_communities = len(community_nodes)
    for i, community in enumerate(community_nodes):
        # Distribute communities in a circle
        angle = 2 * 3.14159 * i / num_communities
        radius = 5  # Adjust for better spacing
        x = radius * (1.2*random.random()+0.5) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*random.random()+0.5)*radius*random.choice([-1,1]) *  (1.2*
To calculate the length of the shortest path between node '6' and '71', we can use a Breadth-First Search (BFS) algorithm, which is suitable for finding the shortest path in an unweighted graph.

Here is the JSON response with the calculated shortest path length:

```json
{
  "answer": 6
}
```

### Explanation:
- The BFS algorithm starts at node '6' and explores all its neighbors level by level.
- It continues to explore until it reaches node '71'.
- The shortest path found from node '6' to node '71' has a length of 6.

This means that the minimum number of edges you need to traverse to go from node '6' to node '71' is 6.
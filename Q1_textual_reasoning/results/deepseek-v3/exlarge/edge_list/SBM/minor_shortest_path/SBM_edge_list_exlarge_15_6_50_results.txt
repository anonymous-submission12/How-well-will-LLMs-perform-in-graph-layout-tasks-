To calculate the length of the shortest path between node '6' and node '50', we can use a Breadth-First Search (BFS) algorithm, which is suitable for finding the shortest path in an unweighted graph.

Here is the JSON response with the calculated shortest path length:

```json
{
  "answer": 6
}
```

### Explanation:
- The shortest path from node '6' to node '50' involves the following sequence of nodes: `6 -> 5 -> 4 -> 11 -> 8 -> 35 -> 42 -> 43 -> 44 -> 40 -> 45 -> 53 -> 50`.
- The length of this path is 6 edges.

Thus, the shortest path length between node '6' and node '50' is **6**.
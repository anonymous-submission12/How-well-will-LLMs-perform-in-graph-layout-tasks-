To calculate the length of the shortest path between node '37' and '68', we can use a Breadth-First Search (BFS) algorithm, which is suitable for finding the shortest path in an unweighted graph.

Here is the JSON response with the calculated shortest path length:

```json
{
  "answer": 6
}
```

### Explanation:
- The BFS algorithm starts at node '37' and explores all its neighbors level by level.
- The shortest path from '37' to '68' is found by traversing through the nodes: `37 -> 38 -> 49 -> 60 -> 71 -> 62 -> 68`.
- The length of this path is 6 edges.

Thus, the shortest path length between node '37' and '68' is **6**.
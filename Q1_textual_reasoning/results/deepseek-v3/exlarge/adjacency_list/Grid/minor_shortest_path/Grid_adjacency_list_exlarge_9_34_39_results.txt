To calculate the length of the shortest path between node '34' and '39', we can use the Breadth-First Search (BFS) algorithm, which is suitable for finding the shortest path in an unweighted graph.

Here is the JSON response with the answer:

```json
{
  "answer": 4
}
```

### Explanation:
- Starting from node '34', we explore its neighbors: '33', '35', and '71'.
- From these nodes, we continue to explore their neighbors until we reach node '39'.
- The shortest path from '34' to '39' is: `34 -> 33 -> 32 -> 31 -> 30 -> 29 -> 28 -> 27 -> 26 -> 25 -> 24 -> 23 -> 22 -> 21 -> 20 -> 19 -> 18 -> 17 -> 16 -> 15 -> 14 -> 13 -> 12 -> 11 -> 10 -> 9 -> 8 -> 7 -> 6 -> 5 -> 4 -> 3 -> 2 -> 39`.
- The length of this path is 4 edges.

Thus, the shortest path length between node '34' and '39' is **4**.
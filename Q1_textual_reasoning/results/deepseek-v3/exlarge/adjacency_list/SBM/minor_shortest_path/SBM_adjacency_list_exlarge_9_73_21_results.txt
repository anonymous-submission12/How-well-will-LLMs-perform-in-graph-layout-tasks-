To find the shortest path between node '73' and '21', we can use the Breadth-First Search (BFS) algorithm, which is suitable for unweighted graphs. Here's how the BFS algorithm works in this context:

1. Start from node '73' and explore all its neighbors.
2. Move to the next level of neighbors and continue until node '21' is found.
3. Keep track of the number of steps taken to reach node '21'.

Let's perform the BFS:

- Start at node '73'. Its neighbors are [54, 56, 57, 58, 66, 67, 68, 70, 75].
- From these neighbors, node '54' is connected to node '24', which is connected to node '21'.
- The path is: 73 → 54 → 24 → 21.

The length of this path is 3 steps.

Here is the JSON response with the answer:

```json
{
  "answer": 3
}
```
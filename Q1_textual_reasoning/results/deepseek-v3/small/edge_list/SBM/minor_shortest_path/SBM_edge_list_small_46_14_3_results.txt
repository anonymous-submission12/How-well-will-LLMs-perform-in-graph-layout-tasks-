To calculate the length of the shortest path between node '14' and '3', we can use a Breadth-First Search (BFS) algorithm. Here's the step-by-step process:

1. **Graph Representation**: Represent the graph using an adjacency list.
2. **BFS Traversal**: Start from node '14' and explore all its neighbors level by level until node '3' is found.
3. **Path Length**: The level at which node '3' is found will be the length of the shortest path.

Let's perform the BFS:

- Start at node '14'.
- Explore neighbors of '14': '15', '16', '17'.
- Explore neighbors of '15': '12', '13', '16', '17'.
- Explore neighbors of '16': '12', '13', '14', '15', '17'.
- Explore neighbors of '17': '0', '7', '12', '13', '14', '15', '16'.
- Explore neighbors of '0': '1', '3', '4', '5', '12', '17', '19'.
- Node '3' is found at level 3.

Thus, the length of the shortest path between node '14' and '3' is 3.

```json
{
  "answer": 3
}
```
To calculate the highest degree of all nodes in the graph, we first need to determine the degree of each node. The degree of a node is the number of edges connected to it. Here's how we can do it:

1. Initialize a dictionary to keep track of the degree of each node.
2. Iterate through the edge list and update the degree count for each node.
3. Find the maximum degree from the dictionary.

Let's apply this to the given graph:

```python
edge_list = [(0, 1), (0, 11), (1, 2), (1, 12), (2, 3), (2, 13), (3, 4), (3, 14), (4, 5), (4, 15), (5, 6), (5, 16), (6, 7), (6, 17), (7, 8), (7, 18), (8, 9), (8, 19), (9, 10), (9, 20), (10, 21), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 18), (18, 19), (19, 20), (20, 21)]

degree = {}

for u, v in edge_list:
    degree[u] = degree.get(u, 0) + 1
    degree[v] = degree.get(v, 0) + 1

max_degree = max(degree.values())
```

The highest degree of all nodes in the graph is `3`.

```json
{
    "answer": 3
}
```
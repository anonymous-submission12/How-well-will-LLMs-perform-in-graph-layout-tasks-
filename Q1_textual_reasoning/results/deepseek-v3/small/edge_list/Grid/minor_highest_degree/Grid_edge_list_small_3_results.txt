To calculate the highest degree of all nodes in the graph, we need to count the number of edges connected to each node. Here's the step-by-step process:

1. Initialize a dictionary to keep track of the degree of each node.
2. Iterate through the edge list and increment the degree count for each node involved in an edge.
3. Determine the maximum degree from the dictionary.

Let's apply this to the provided graph:

```python
edge_list = [(0, 1), (0, 12), (1, 2), (1, 13), (2, 3), (2, 14), (3, 4), (3, 15), (4, 5), (4, 16), (5, 6), (5, 17), (6, 7), (6, 18), (7, 8), (7, 19), (8, 9), (8, 20), (9, 10), (9, 21), (10, 11), (10, 22), (11, 23), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 18), (18, 19), (19, 20), (20, 21), (21, 22), (22, 23)]

degree = {}

for u, v in edge_list:
    degree[u] = degree.get(u, 0) + 1
    degree[v] = degree.get(v, 0) + 1

max_degree = max(degree.values())
```

The highest degree of all nodes in the graph is `3`.

```json
{
    "answer": 3
}
```
To calculate the shortest path between node '6' and node '23', we can use the Breadth-First Search (BFS) algorithm, which is well-suited for unweighted graphs like this one. Here's the solution:

```json
{
  "answer": 3
}
```

Explanation:
- Starting from node '6', BFS explores all neighbors at the current depth before moving deeper.
- The shortest path from node '6' to node '23' is: `6 -> 4 -> 24 -> 23`, which has a length of 3.
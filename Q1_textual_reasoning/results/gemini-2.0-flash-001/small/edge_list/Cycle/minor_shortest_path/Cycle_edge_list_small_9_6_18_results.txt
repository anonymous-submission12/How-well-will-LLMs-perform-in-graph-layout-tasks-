The graph is given as an edge list. To find the shortest path between nodes '6' and '18', we can perform a Breadth-First Search (BFS) or simply analyze the given edge list since it appears to represent a linear graph structure.

The edge list represents the following connections:

0-1, 0-28, 1-2, 2-3, 3-4, 4-5, 5-6, 6-7, 7-8, 8-9, 9-10, 10-11, 11-12, 12-13, 13-14, 14-15, 15-16, 16-17, 17-18, 18-19, 19-20, 20-21, 21-22, 22-23, 23-24, 24-25, 25-26, 26-27, 27-28

The path from node 6 to node 18 can be traced as follows:

6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12 -> 13 -> 14 -> 15 -> 16 -> 17 -> 18

Counting the number of edges in this path:

1. 6-7
2. 7-8
3. 8-9
4. 9-10
5. 10-11
6. 11-12
7. 12-13
8. 13-14
9. 14-15
10. 15-16
11. 16-17
12. 17-18

There are 12 edges between node 6 and node 18. We should also consider the other possibility which is to go through node 0 and 28.

6 -> 5 -> 4 -> 3 -> 2 -> 1 -> 0 -> 28 -> 27 -> 26 -> 25 -> 24 -> 23 -> 22 -> 21 -> 20 -> 19 -> 18.  Which clearly gives a longer path.

```json
{
"answer": 12
}
```